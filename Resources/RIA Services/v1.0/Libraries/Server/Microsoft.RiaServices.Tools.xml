<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.RiaServices.Tools</name>
    </assembly>
    <members>
        <member name="M:System.Web.DomainServices.Utility.IsPropertyReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if the specified property is read-only by virtue of having
            an appropriately configured ReadOnlyAttribute or EditableAttribute applied.
            </summary>
            <param name="property">The property to check for editability.</param>
            <returns>True if the specified property is read-only, false otherwise.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsPropertyReadOnly(System.Reflection.PropertyInfo)">
            <summary>
            Returns true if the specified property is read-only by virtue of having
            an appropriately configured <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> applied.
            </summary>
            <param name="property">The property to check for editability.</param>
            <returns><c>true</c> if the specified property is read-only; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsNullableType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the given type is a nullable type</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetNonNullableType(System.Type)">
            <summary>
            If the given type is <see cref="T:System.Nullable"/>, returns the element type,
            otherwise simply returns the input type
            </summary>
            <param name="type">The type to test that may or may not be Nullable</param>
            <returns>Either the input type or, if it was Nullable, its element type</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsPredefinedType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a primitive type or one
            of our standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, or one of our standard generic types whose generic
            argument is primitive or simple (e.g. Nullable, IEnumerable, IDictionary&lt;TKey,TValue&gt;).
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsPredefinedListType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is <see cref="T:System.Collections.Generic.IEnumerable`1"/> or an <see cref="T:System.Collections.IList"/> type, 
            and is either an interface, an array, or has a default constructor.
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsPredefinedDictionaryType(System.Type)">
            <summary>
            Returns <c>true</c> if <paramref name="type"/> implements <see cref="T:System.Collections.Generic.IDictionary`2"/> and
            its generic type arguments are acceptable predefined simple types.
            </summary>
            <param name="type">The type to test.</param>
            <returns><c>true</c> if the type is a <see cref="T:System.Collections.Generic.IDictionary`2"/> with supported generic type arguments.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetDictionaryGenericArgumentTypes(System.Type)">
            <summary>
            Returns an array of types that represent the generic type arguments used in <paramref name="type"/>'s
            implementation of <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="type">The type to examine.</param>
            <returns>An array of types that represent the generic type arguments used in <paramref name="type"/>'s
            implementation of <see cref="T:System.Collections.Generic.IDictionary`2"/>. Returns null if <paramref name="type"/> does 
            not implement <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsPredefinedSimpleType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is either primitive or one of our
            standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, etc
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetElementType(System.Type)">
            <summary>
            Returns the underlying element type starting from a given type.
            </summary>
            <remarks>
            Simple types simply return the input type.
            If the given type is an array, this method returns the array's
            element type.
            If the type is a generic type of <see cref="T:System.Collections.IEnumerable"/>, 
            or <see cref="T:System.Nullable"/>, this method returns the element
            type of the generic parameter
            </remarks>
            <param name="type"><see cref="T:System.Type"/> to examine.</param>
            <returns>The underlying element type starting from the given type</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetClientType(System.Type)">
            <summary>
            Gets the type that should be used on the client for the specified type.
            </summary>
            <param name="t">The type to get the client type for.</param>
            <returns>The client type.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetClientValue(System.Type,System.Object)">
            <summary>
            Gets a value that can be used by the client.
            </summary>
            <param name="targetType">The type used by the client.</param>
            <param name="value">The value on the server.</param>
            <returns>A value that can be used by the client.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetServerValue(System.Type,System.Object)">
            <summary>
            Gets a value that can be used by the server.
            </summary>
            <param name="targetType">The type used by the server.</param>
            <param name="value">The value from the client.</param>
            <returns>A value that can be used by the server.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsByVal(System.Web.DomainServices.DomainOperationParameter)">
            <summary>
            Checks whether a parameter expects a value to be passed by-value.
            </summary>
            <param name="parameter">The parameter to check.</param>
            <returns>True if the parameter expects a by-value value.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.IsSerializableDataMember(System.ComponentModel.PropertyDescriptor,System.Boolean)">
            <summary>
            Returns true if the specified property is a data member that should be serialized
            </summary>
            <param name="propertyDescriptor">The property to inspect</param>
            <param name="isEntity">True if the specified property is defined on an Entity</param>
            <returns>true if the specified property is a data member that should be serialized</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.GetSerializableProperties(System.Type,System.Boolean)">
            <summary>
            Returns the set of serializable properties for the specified Type.
            </summary>
            <param name="type">The Type to get properties for.</param>
            <param name="isEntity">True if the specified property is defined on an Entity</param>
            <returns>The set of serializable properties.</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.DefinitionIsAssignableFrom(System.Type,System.Type)">
            <summary>
            Determines whether the generic type definition is assignable from the derived type.
            </summary>
            <remarks>
            This behaves just like <see cref="M:System.Type.IsAssignableFrom(System.Type)"/> except that it determines
            whether any generic type that can be made from the <paramref name="genericTypeDefinition"/>
            is assignable from <paramref name="derivedType"/>.
            </remarks>
            <param name="genericTypeDefinition">The generic type definition</param>
            <param name="derivedType">The type to determine assignability from</param>
            <returns>Whether the type definition is assignable from the derived type</returns>
        </member>
        <member name="M:System.Web.DomainServices.Utility.DefinitionIsAssignableFrom(System.Type,System.Type,System.Type@)">
            <summary>
            Determines whether the generic type definition is assignable from the derived type.
            </summary>
            <remarks>
            This behaves just like <see cref="M:System.Type.IsAssignableFrom(System.Type)"/> except that it determines
            whether any generic type that can be made from the <paramref name="genericTypeDefinition"/>
            is assignable from <paramref name="derivedType"/>.
            </remarks>
            <param name="genericTypeDefinition">The generic type definition</param>
            <param name="derivedType">The type to determine assignability from</param>
            <param name="genericType">The generic base class or interface implemented by the derived
            type that can be made from the <paramref name="genericTypeDefinition"/>. This value is
            null when the method return false.
            </param>
            <returns>Whether the type definition is assignable from the derived type</returns>
        </member>
        <member name="T:System.Web.DomainServices.UriEqualityComparer">
            <summary>
            This class is for comparing Uris correctly
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.AssemblyUtilities">
            <summary>
            Assembly level utilities.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.LoadAssembly(System.String,Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Loads the specified assembly file.
            </summary>
            <param name="assemblyFileName">The full path to the file of the assembly to load.  It cannot be null.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and an error message will have been logged).
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.ReflectionOnlyLoadReferences(System.Reflection.Assembly,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Reflection.Assembly},System.Boolean,Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Does a "reflection only load" of all the reference assemblies for the given <paramref name="assembly"/>
            </summary>
            <param name="assembly">The assembly whose references need to be loaded.</param>
            <param name="assemblySearchPaths">Optional list of folders to search for assembly references.</param>
            <param name="loadedAssemblies">Dictionary to track already loaded assemblies.</param>
            <param name="recursive">If <c>true</c> recursively load references from the references.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns><c>true</c> means all loads succeeded, <c>false</c> means some errors occurred and were logged.
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.ReflectionOnlyLoad(System.Reflection.AssemblyName,System.Collections.Generic.IEnumerable{System.String},Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Does a "reflection only load" of the given <paramref name="assemblyName"/>.
            </summary>
            <param name="assemblyName">The name of the assembly to load.</param>
            <param name="assemblySearchPaths">Optional list of folders to search for assembly references.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and a warning message will have been logged).
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.ReflectionOnlyLoadFrom(System.String,Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Does a "reflection only load" from the given assembly file.
            </summary>
            <param name="assemblyFileName">The full path to the file of the assembly to load.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and an error message will have been logged).
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.ReflectionOnlyLoadFromSearchPaths(System.Reflection.AssemblyName,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Attempts to load the specified <paramref name="assemblyName"/> by searching through
            the specified <paramref name="assemblySearchPaths"/>. The first successful load is returned.
            </summary>
            <param name="assemblyName">The assembly to locate.</param>
            <param name="assemblySearchPaths">List of full paths to folders to search.</param>
            <returns><c>null</c> for failure, else the first assembly loaded.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.GetExportedTypes(System.Reflection.Assembly,Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Standard implementation of <see cref="M:System.Reflection.Assembly.GetExportedTypes"/>
            with autorecovery and logging of common error conditions.
            </summary>
            <param name="assembly">The assembly whose exported types are needed</param>
            <param name="logger">Optional logger to use to report problems.</param>
            <returns>The collection of types.  It may be empty but it will not be null.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AssemblyUtilities.IsAssemblyMsCorlib(System.String)">
            <summary>
            Determines whether the given assembly is mscorlib
            </summary>
            <param name="assemblyName">assembly name to test</param>
            <returns><c>true</c> if the assembly is mscorlib</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CleanRiaClientFilesTask">
            <summary>
            Custom MSBuild task to delete all generated files created by <see cref="T:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask"/>
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.RiaClientFilesTask">
            <summary>
            Common base class shared by <see cref="T:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask"/> and <see cref="T:Microsoft.RiaServices.Tools.CleanRiaClientFilesTask"/>
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ILogger">
            <summary>
            Abstraction to permit code gen task to report errors
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ILogger.LogError(System.String)">
            <summary>
            Logs the given message as an error
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ILogger.LogWarning(System.String)">
            <summary>
            Logs the given message as a warning
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ILogger.LogMessage(System.String)">
            <summary>
            Logs the given message as information
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ILogger.HasLoggedErrors">
            <summary>
            Gets a value indicating whether any errors were logged.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.Execute">
            <summary>
            Implementation of the normal MSBuild tasks execution entry point method
            </summary>
            <returns><c>true</c> for success.  If <c>false</c>, warnings or errors must have been logged.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.ExecuteInternal">
            <summary>
            Internal implementation for the <see cref="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.Execute"/> method, called from this base class.
            </summary>
            <returns><c>true</c> for success.  If <c>false</c>, warnings or errors must have been logged.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.NormalizeProjectPaths">
            <summary>
            Helper method to convert input project paths to full path names.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.LogError(System.String)">
            <summary>
            Logs the given error message to the logger associated with this task
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.LogWarning(System.String)">
            <summary>
            Logs the given warning message to the logger associated with this task
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.LogMessage(System.String)">
            <summary>
            Logs the given informational message to the logger associated with this task
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.SafeSetReadOnlyAttribute(System.String,System.Boolean)">
            <summary>
            Sets or resets the read-only file attribute of the given file
            </summary>
            <param name="fileName">Full path to the file to modify</param>
            <param name="newState">The desired state of the bit</param>
            <returns><c>false</c> if a problem occurred and the bit could not be altered.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.SafeFileDelete(System.String)">
            <summary>
            Safe form of File.Delete that catches and logs exceptions as warnings.
            </summary>
            <param name="fileName">The full path to the file to delete.</param>
            <returns><c>false</c> if an error occurred and the file could not be deleted.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.SafeFolderCreate(System.String)">
            <summary>
            Safe form of <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>
            </summary>
            <remarks>
            This method will do nothing if the folder already exists, otherwise it
            will create it.  Any error in creation will log an appropriate error message
            and return <c>false</c>
            </remarks>
            <param name="directoryPath">The full path to the folder to create.</param>
            <returns><c>false</c> if an error occurred and the folder could not be created.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.IsFileNewerThan(System.String,System.DateTime)">
            <summary>
            Tests whether a file has been modified more recently than a specified time
            </summary>
            <param name="fileName">File to test</param>
            <param name="referenceTime">Time to test it againt</param>
            <returns><c>true</c> if the given file has been modified more recently than the given time</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.IsFileNewerThan(System.String,System.String)">
            <summary>
            Tests whether a file has been modified more recently than another file
            </summary>
            <param name="fileName">File to test</param>
            <param name="referenceFileName">File to test it againt</param>
            <returns><c>true</c> if the given <paramref name="fileName"/> has been modified more recently than the given <paramref name="referenceFileName"/></returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.AreAnyFilesNewerThan(System.Collections.Generic.IEnumerable{System.String},System.DateTime)">
            <summary>
            Tests whether any file in a collection is newer than a given time
            </summary>
            <param name="fileNames">Collection of files to test</param>
            <param name="referenceTime">Time to test against</param>
            <returns><c>true</c> if any file in the collection is newer than the time</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.IsRealBuildOperation">
            <summary>
            Is Visual Studio performing a build operation (or simply executing a generate request)
            </summary>
            <returns><c>true</c> if the VS host object is not present or we are doing a full build in VS</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.GetLastChangeTimeFromVS(System.String)">
            <summary>
            Get the last time that the file was changed from Visual Studio
            </summary>
            <param name="visualStudioFile">The file to test</param>
            <returns>The DateTime of the file's last modified time, or when VS last dirtied the TextBuffer</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.FileExistsInVS(System.String)">
            <summary>
            Determines whether the given file is open in VS
            </summary>
            <param name="fileName">The file to test</param>
            <returns><c>true</c> if the file is open in VS</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.ReadFileFromVS(System.String)">
            <summary>
            Reads the contents of the given file.  If it is open in VS, read it from VS's TextBuffer
            </summary>
            <param name="fileName">File to read</param>
            <returns>The contents of the file as a string</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.WriteOrDeleteFileToVS(System.String,System.String)">
            <summary>
            Writes the given content to the given file if it is non-empty, else deletes the file
            </summary>
            <param name="destinationFile">Full path to file to write or delete</param>
            <param name="content">Content to write to file</param>
            <returns><c>true</c> if the write succeeded, <c>false</c> if it was deleted or the write failed.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.WriteFileToVS(System.String,System.String)">
            <summary>
            Writes the given file to VS.  If VS is not present, it just writes to the file system
            </summary>
            <param name="destinationFile">Name of the file to create/write</param>
            <param name="content">String content of file to write</param>
            <returns><c>true</c> if the write succeeded</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.DeleteFileFromVS(System.String)">
            <summary>
            Deletes the specified file in VS-compatible way
            </summary>
            <param name="fileName">Full path of the file to delete.  It may or may not exist on disk.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.FullPath(System.String,System.String)">
            <summary>
            Constructs the absolute path to a given file.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="directory">The directory path.</param>
            <returns>An absolute path based on specified fileName and directory.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.PrependClientProjectName(System.String)">
            <summary>
            Prepends the simple name of the client project file
            to the given <paramref name="fileName"/> which is assumed
            to be just a base name (no path).
            </summary>
            <remarks>
            This method is used to produce unique file names associated
            with a client project in the event there are multiple client
            projects within a single physical folder.
            </remarks>
            <param name="fileName">Simple short name of a file</param>
            <returns>The input <paramref name="fileName"/> with the client project name prepended.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.GetFullPathRelativeToDirectory(System.String,System.String)">
            <summary>
            Given a potentially relative path and a root directory, resolves to a full path.
            </summary>
            <param name="fileName">Name of file.  Maybe relative or full.</param>
            <param name="directory">Name of directory to use as root if file name is relative.</param>
            <returns>The full path of the file</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.FilesPreviouslyWritten">
            <summary>
            Returns the set of full file names previously written by the
            last code generation pass.
            </summary>
            <remarks>The list is ordered (descending) by length of folder name so that subfolders
            appear before their parent folders.
            </remarks>
            <returns>The collection of full file names.  The list may be empty but it will not be null.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.RiaClientFilesTask.DeleteFolderIfEmpty(System.String)">
            <summary>
            Deletes the specified folder if it is empty.
            </summary>
            <param name="folderPath">Full path to folder</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.FilesWereWritten">
            <summary>
            Gets a value indicating whether any files were written
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.OutputPath">
            <summary>
            Gets or sets the path where ancillary temporary files should go
            </summary>
            <value>
            This path may be absolute or relative.  If relative, it will be considered to
            be relative to the <see cref="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.ClientProjectPath"/>
            This property is required.  Normal MSBuild semantics will not permit this task
            to be used unless it has been set.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.ClientProjectPath">
            <summary>
            Gets or sets the path to the client project currently running this task.
            </summary>
            <value>
            Currently supported values are currently "C#" or "VB"
            This property is required
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.GeneratedCodePath">
            <summary>
            Gets or sets the path where generated code files should go
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.FileListPath">
            <summary>
            Gets the path of the file where to write the list of generated files
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.SourceFileListPath">
            <summary>
            Gets the path of the file where we write the list of known source projects and their files
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.LinkedServerProjectsPath">
            <summary>
            Gets the path of the file where we write the list of linked server projects
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.TaskFileManager">
            <summary>
            Gets or sets the task file manager proxy object to interact with VS
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.ReferenceListPath">
            <summary>
            Gets the path of the file where to write the list of client references
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.ClientProjectDirectory">
            <summary>
            Gets the absolute path to the project running this task
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.OutputDirectory">
            <summary>
            Gets the absolute path of the output directory.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.RiaClientFilesTask.HasLoggedErrors">
            <summary>
            Gets a value indicating whether any errors were logged.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CleanRiaClientFilesTask.ExecuteInternal">
            <summary>
            Internal implementation of <see cref="M:Microsoft.Build.Framework.ITask.Execute"/> called from base class.
            </summary>
            <returns><c>true</c> if task succeeds</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CleanRiaClientFilesTask.DeletePreviouslyWrittenFiles">
            <summary>
            Deletes all the generated files from a prior pass
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CleanRiaClientFilesTask.DeleteOurFileLists">
            <summary>
            Deletes the breadcrumb files we created to keep track of files written on prior pass
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCompileUnit"/> class and optimizes it for client proxy generation.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CodeDomVisitor">
            <summary>
            Visits a CodeCompileUnit class.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.Visit(System.CodeDom.CodeCompileUnit)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCompileUnit"/>.
            </summary>
            <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitBase(System.CodeDom.CodeCompileUnit)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCompileUnit"/>.
            </summary>
            <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeArgumentReferenceExpression"/>.
            </summary>
            <param name="codeArgumentReferenceExpression">The <see cref="T:System.CodeDom.CodeArgumentReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeArrayCreateExpression"/>.
            </summary>
            <param name="codeArrayCreateExpression">The <see cref="T:System.CodeDom.CodeArrayCreateExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeArrayIndexerExpression"/>.
            </summary>
            <param name="codeArrayIndexerExpression">The <see cref="T:System.CodeDom.CodeArrayIndexerExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeAssignStatement(System.CodeDom.CodeAssignStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAssignStatement"/>.
            </summary>
            <param name="codeAssignStatement">The <see cref="T:System.CodeDom.CodeAssignStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttachEventStatement"/>.
            </summary>
            <param name="codeAttachEventStatement">The <see cref="T:System.CodeDom.CodeAttachEventStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeAttributeArgument(System.CodeDom.CodeAttributeArgument)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeArgument"/>.
            </summary>
            <param name="codeAttributeArgument">The <see cref="T:System.CodeDom.CodeAttributeArgument"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeAttributeArgumentCollection(System.CodeDom.CodeAttributeArgumentCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeArgumentCollection"/>.
            </summary>
            <param name="codeAttributeArgumentCollection">The <see cref="T:System.CodeDom.CodeAttributeArgumentCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeAttributeDeclaration(System.CodeDom.CodeAttributeDeclaration)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/>.
            </summary>
            <param name="codeAttributeDeclaration">The <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeAttributeDeclarationCollection(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>.
            </summary>
            <param name="codeAttributeDeclarationCollection">The <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeBaseReferenceExpression"/>.
            </summary>
            <param name="codeBaseReferenceExpression">The <see cref="T:System.CodeDom.CodeBaseReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeBinaryOperatorExpression"/>.
            </summary>
            <param name="codeBinaryOperatorExpression">The <see cref="T:System.CodeDom.CodeBinaryOperatorExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeCastExpression(System.CodeDom.CodeCastExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCastExpression"/>.
            </summary>
            <param name="codeCastExpression">The <see cref="T:System.CodeDom.CodeCastExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeCatchClause(System.CodeDom.CodeCatchClause)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCatchClause"/>.
            </summary>
            <param name="codeCatchClause">The <see cref="T:System.CodeDom.CodeCatchClause"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeCatchClauseCollection(System.CodeDom.CodeCatchClauseCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCatchClauseCollection"/>.
            </summary>
            <param name="codeCatchClauseCollection">The <see cref="T:System.CodeDom.CodeCatchClauseCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeChecksumPragma(System.CodeDom.CodeChecksumPragma)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeChecksumPragma"/>.
            </summary>
            <param name="codeChecksumPragma">The <see cref="T:System.CodeDom.CodeChecksumPragma"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeComment(System.CodeDom.CodeComment)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeComment"/>.
            </summary>
            <param name="codeComment">The <see cref="T:System.CodeDom.CodeComment"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeCommentStatement(System.CodeDom.CodeCommentStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCommentStatement"/>.
            </summary>
            <param name="codeCommentStatement">The <see cref="T:System.CodeDom.CodeCommentStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeCommentStatementCollection(System.CodeDom.CodeCommentStatementCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCommentStatementCollection"/>.
            </summary>
            <param name="codeCommentStatementCollection">The <see cref="T:System.CodeDom.CodeCommentStatementCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeConditionStatement(System.CodeDom.CodeConditionStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeConditionStatement"/>.
            </summary>
            <param name="codeConditionStatement">The <see cref="T:System.CodeDom.CodeConditionStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeConstructor(System.CodeDom.CodeConstructor)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeConstructor"/>.
            </summary>
            <param name="codeConstructor">The <see cref="T:System.CodeDom.CodeConstructor"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDefaultValueExpression"/>.
            </summary>
            <param name="codeDefaultValueExpression">The <see cref="T:System.CodeDom.CodeDefaultValueExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDelegateCreateExpression"/>.
            </summary>
            <param name="codeDelegateCreateExpression">The <see cref="T:System.CodeDom.CodeDelegateCreateExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDelegateInvokeExpression"/>.
            </summary>
            <param name="codeDelegateInvokeExpression">The <see cref="T:System.CodeDom.CodeDelegateInvokeExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeDirectionExpression(System.CodeDom.CodeDirectionExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDirectionExpression"/>.
            </summary>
            <param name="codeDirectionExpression">The <see cref="T:System.CodeDom.CodeDirectionExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeDirective(System.CodeDom.CodeDirective)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDirective"/>.
            </summary>
            <param name="codeDirective">The <see cref="T:System.CodeDom.CodeDirective"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeDirectiveCollection(System.CodeDom.CodeDirectiveCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDirectiveCollection"/>.
            </summary>
            <param name="codeDirectiveCollection">The <see cref="T:System.CodeDom.CodeDirectiveCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeEntryPointMethod(System.CodeDom.CodeEntryPointMethod)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeEntryPointMethod"/>.
            </summary>
            <param name="codeEntryPointMethod">The <see cref="T:System.CodeDom.CodeEntryPointMethod"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeEventReferenceExpression"/>.
            </summary>
            <param name="codeEventReferenceExpression">The <see cref="T:System.CodeDom.CodeEventReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeExpression(System.CodeDom.CodeExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeExpression"/>.
            </summary>
            <param name="codeExpression">The <see cref="T:System.CodeDom.CodeExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeExpressionCollection(System.CodeDom.CodeExpressionCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeExpressionCollection"/>.
            </summary>
            <param name="codeExpressionCollection">The <see cref="T:System.CodeDom.CodeExpressionCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeExpressionStatement(System.CodeDom.CodeExpressionStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeExpressionStatement"/>.
            </summary>
            <param name="codeExpressionStatement">The <see cref="T:System.CodeDom.CodeExpressionStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeFieldReferenceExpression"/>.
            </summary>
            <param name="codeFieldReferenceExpression">The <see cref="T:System.CodeDom.CodeFieldReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeGotoStatement(System.CodeDom.CodeGotoStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeGotoStatement"/>.
            </summary>
            <param name="codeGotoStatement">The <see cref="T:System.CodeDom.CodeGotoStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeIndexerExpression(System.CodeDom.CodeIndexerExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeIndexerExpression"/>.
            </summary>
            <param name="codeIndexerExpression">The <see cref="T:System.CodeDom.CodeIndexerExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeIterationStatement(System.CodeDom.CodeIterationStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeIterationStatement"/>.
            </summary>
            <param name="codeIterationStatement">The <see cref="T:System.CodeDom.CodeIterationStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeLabeledStatement(System.CodeDom.CodeLabeledStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeLabeledStatement"/>.
            </summary>
            <param name="codeLabeledStatement">The <see cref="T:System.CodeDom.CodeLabeledStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeLinePragma(System.CodeDom.CodeLinePragma)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeLinePragma"/>.
            </summary>
            <param name="codeLinePragma">The <see cref="T:System.CodeDom.CodeLinePragma"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMemberEvent(System.CodeDom.CodeMemberEvent)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberEvent"/>.
            </summary>
            <param name="codeMemberEvent">The <see cref="T:System.CodeDom.CodeMemberEvent"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMemberField(System.CodeDom.CodeMemberField)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberField"/>.
            </summary>
            <param name="codeMemberField">The <see cref="T:System.CodeDom.CodeMemberField"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMemberMethod(System.CodeDom.CodeMemberMethod)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberMethod"/>.
            </summary>
            <param name="codeMemberMethod">The <see cref="T:System.CodeDom.CodeMemberMethod"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMemberProperty(System.CodeDom.CodeMemberProperty)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberProperty"/>.
            </summary>
            <param name="codeMemberProperty">The <see cref="T:System.CodeDom.CodeMemberProperty"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMethodInvokeExpression"/>.
            </summary>
            <param name="codeMethodInvokeExpression">The <see cref="T:System.CodeDom.CodeMethodInvokeExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMethodReferenceExpression"/>.
            </summary>
            <param name="codeMethodReferenceExpression">The <see cref="T:System.CodeDom.CodeMethodReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMethodReturnStatement"/>.
            </summary>
            <param name="codeMethodReturnStatement">The <see cref="T:System.CodeDom.CodeMethodReturnStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeNamespace(System.CodeDom.CodeNamespace)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespace"/>.
            </summary>
            <param name="codeNamespace">The <see cref="T:System.CodeDom.CodeNamespace"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeNamespaceCollection(System.CodeDom.CodeNamespaceCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceCollection"/>.
            </summary>
            <param name="codeNamespaceCollection">The <see cref="T:System.CodeDom.CodeNamespaceCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeNamespaceImport(System.CodeDom.CodeNamespaceImport)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceImport"/>.
            </summary>
            <param name="codeNamespaceImport">The <see cref="T:System.CodeDom.CodeNamespaceImport"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeNamespaceImportCollection(System.CodeDom.CodeNamespaceImportCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/>.
            </summary>
            <param name="codeNamespaceImportCollection">The <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeObjectCreateExpression"/>.
            </summary>
            <param name="codeObjectCreateExpression">The <see cref="T:System.CodeDom.CodeObjectCreateExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeParameterDeclarationExpression"/>.
            </summary>
            <param name="codeParameterDeclarationExpression">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeParameterDeclarationExpressionCollection(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection"/>.
            </summary>
            <param name="codeParameterDeclarationExpressionCollection">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodePrimitiveExpression"/>.
            </summary>
            <param name="codePrimitiveExpression">The <see cref="T:System.CodeDom.CodePrimitiveExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodePropertyReferenceExpression"/>.
            </summary>
            <param name="codePropertyReferenceExpression">The <see cref="T:System.CodeDom.CodePropertyReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodePropertySetValueReferenceExpression"/>.
            </summary>
            <param name="codePropertySetValueReferenceExpression">The <see cref="T:System.CodeDom.CodePropertySetValueReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeRegionDirective(System.CodeDom.CodeRegionDirective)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeRegionDirective"/>.
            </summary>
            <param name="codeRegionDirective">The <see cref="T:System.CodeDom.CodeRegionDirective"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeRemoveEventStatement"/>.
            </summary>
            <param name="codeRemoveEventStatement">The <see cref="T:System.CodeDom.CodeRemoveEventStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetCompileUnit"/>.
            </summary>
            <param name="codeSnippetCompileUnit">The <see cref="T:System.CodeDom.CodeSnippetCompileUnit"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeSnippetExpression(System.CodeDom.CodeSnippetExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetExpression"/>.
            </summary>
            <param name="codeSnippetExpression">The <see cref="T:System.CodeDom.CodeSnippetExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeSnippetStatement(System.CodeDom.CodeSnippetStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetStatement"/>.
            </summary>
            <param name="codeSnippetStatement">The <see cref="T:System.CodeDom.CodeSnippetStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeSnippetTypeMember(System.CodeDom.CodeSnippetTypeMember)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetTypeMember"/>.
            </summary>
            <param name="codeSnippetTypeMember">The <see cref="T:System.CodeDom.CodeSnippetTypeMember"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeStatement(System.CodeDom.CodeStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeStatement"/>.
            </summary>
            <param name="codeStatement">The <see cref="T:System.CodeDom.CodeStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeStatementCollection(System.CodeDom.CodeStatementCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeStatementCollection"/>.
            </summary>
            <param name="codeStatementCollection">The <see cref="T:System.CodeDom.CodeStatementCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeThisReferenceExpression"/>.
            </summary>
            <param name="codeThisReferenceExpression">The <see cref="T:System.CodeDom.CodeThisReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeThrowExceptionStatement"/>.
            </summary>
            <param name="codeThrowExceptionStatement">The <see cref="T:System.CodeDom.CodeThrowExceptionStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement"/>.
            </summary>
            <param name="codeTryCatchFinallyStatement">The <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeConstructor(System.CodeDom.CodeTypeConstructor)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeConstructor"/>.
            </summary>
            <param name="codeTypeConstructor">The <see cref="T:System.CodeDom.CodeTypeConstructor"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeDeclaration(System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.
            </summary>
            <param name="codeTypeDeclaration">The <see cref="T:System.CodeDom.CodeTypeDeclaration"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeDeclarationCollection(System.CodeDom.CodeTypeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/>.
            </summary>
            <param name="codeTypeDeclarationCollection">The <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeDelegate(System.CodeDom.CodeTypeDelegate)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDelegate"/>.
            </summary>
            <param name="codeTypeDelegate">The <see cref="T:System.CodeDom.CodeTypeDelegate"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeMember(System.CodeDom.CodeTypeMember)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeMember"/>.
            </summary>
            <param name="codeTypeMember">The <see cref="T:System.CodeDom.CodeTypeMember"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeMemberCollection(System.CodeDom.CodeTypeMemberCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeMemberCollection"/>.
            </summary>
            <param name="codeTypeMemberCollection">The <see cref="T:System.CodeDom.CodeTypeMemberCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeOfExpression"/>.
            </summary>
            <param name="codeTypeOfExpression">The <see cref="T:System.CodeDom.CodeTypeOfExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeParameter(System.CodeDom.CodeTypeParameter)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeParameter"/>.
            </summary>
            <param name="codeTypeParameter">The <see cref="T:System.CodeDom.CodeTypeParameter"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeParameterCollection(System.CodeDom.CodeTypeParameterCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeParameterCollection"/>.
            </summary>
            <param name="codeTypeParameterCollection">The <see cref="T:System.CodeDom.CodeTypeParameterCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeReference(System.CodeDom.CodeTypeReference)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReference"/>.
            </summary>
            <param name="codeTypeReference">The <see cref="T:System.CodeDom.CodeTypeReference"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeReferenceCollection(System.CodeDom.CodeTypeReferenceCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReferenceCollection"/>.
            </summary>
            <param name="codeTypeReferenceCollection">The <see cref="T:System.CodeDom.CodeTypeReferenceCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReferenceExpression"/>.
            </summary>
            <param name="codeTypeReferenceExpression">The <see cref="T:System.CodeDom.CodeTypeReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeVariableDeclarationStatement"/>.
            </summary>
            <param name="codeVariableDeclarationStatement">The <see cref="T:System.CodeDom.CodeVariableDeclarationStatement"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeDomVisitor.VisitCodeVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeVariableReferenceExpression"/>.
            </summary>
            <param name="codeVariableReferenceExpression">The <see cref="T:System.CodeDom.CodeVariableReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.#ctor(Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext)">
            <summary>
            Default constructor accepting the current <see cref="T:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext"/> context.
            </summary>
            <param name="context">The current <see cref="T:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext"/> context.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeNamespaceCollection(System.CodeDom.CodeNamespaceCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceCollection"/>.
            </summary>
            <param name="codeNamespaceCollection">The <see cref="T:System.CodeDom.CodeNamespaceCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeNamespaceImportCollection(System.CodeDom.CodeNamespaceImportCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/>.
            </summary>
            <param name="codeNamespaceImportCollection">The <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeTypeDeclarationCollection(System.CodeDom.CodeTypeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/>.
            </summary>
            <param name="codeTypeDeclarationCollection">The <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeAttributeDeclarationCollection(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>.
            </summary>
            <param name="codeAttributeDeclarationCollection">The <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeTypeReference(System.CodeDom.CodeTypeReference)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReference"/>.
            </summary>
            <param name="codeTypeReference">The <see cref="T:System.CodeDom.CodeTypeReference"/> to visit.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.GetAttributeId(System.CodeDom.CodeAttributeDeclaration)">
            <summary>
            Gets a unique identifier for a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> instance.
            </summary>
            <param name="attribute">The <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> instance.</param>
            <returns>A unique identifier for a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> instance.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.FixUpNamespaceRootNamespace(System.CodeDom.CodeNamespace)">
            <summary>
            Fixes up a <see cref="T:System.CodeDom.CodeNamespace"/>.  (For use with Visual Basic codegen.)
            </summary>
            <param name="ns">The <see cref="T:System.CodeDom.CodeNamespace"/> to fix.</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.IsCSharp">
            <summary>
            Gets a value indicating whether or not the <see cref="T:System.CodeDom.CodeCompileUnit"/> will be
            emitted to a C# code.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.UseFullTypeNames">
            <summary>
            Gets a value indicating whether or not the <see cref="T:System.CodeDom.CodeCompileUnit"/> is 
            generating types using full type names.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.RootNamespace">
            <summary>
            Gets the root namespace.  (For use with Visual Basic codegen only.)
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.NamespaceImportComparer">
            <summary>
            Nested type used to sort import statements, giving preference to System assemblies.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyFixupCodeDomVisitor.NamespaceImportComparer.Compare(System.String,System.String)">
            <summary>
            Compares two string values and returns a value indicating the preferred sort order.
            </summary>
            <param name="x">A string value to compare against.</param>
            <param name="y">A string value to compare.</param>
            <returns>-1 if the <paramref name="x"/> value is less, 0 if the values are equal, 1 if <paramref name="y"/> is less.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext">
            <summary>
            Class to hold options used for code generation in <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/>
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.Language">
            <summary>
            Gets or sets the language for code generation.  Cannot be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.ClientProjectName">
            <summary>
            Gets or sets the user visible name of the client project.  This is used in errors and warnings.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.RootNamespace">
            <summary>
            Gets or sets the root namespace of the target project. If it's not null or empty, 
            the code generator will try to change generated namespaces in such a way that the client and
            server namespaces match. Use this to get correct code generation for Visual Basic projects 
            with nonempty root namespace.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.IsApplicationContextGenerationEnabled">
            <summary>
            Gets or sets a value indicating whether to perform application-level codegen.
            </summary>
            <remarks>
            This property controls whether codegen occurs for classes that are not directly
            tied to domain services. This list of classes currently includes <c>WebContext</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.UseFullTypeNames">
            <summary>
            Gets or sets a value indicating whether fully qualified type names
            should be used during code generation
            </summary>
            <remarks>
            If <c>false</c> the code generator will generated only short type names
            and add import statements.  If <c>true</c> the code generator will always
            generate fully qualified type names and avoid adding unnecessary imports.
            </remarks>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.Logger">
            <summary>
            Gets or sets the <see cref="T:Microsoft.RiaServices.Tools.ILogger"/> to use during code generation.  It cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext.SharedTypeService">
            <summary>
            Gets or sets the <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService"/> to use during code generation.
            </summary>
            <value>
            This value is optional, but if not set, no shared types can be detected.
            </value>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ClientProxyGenerator">
            <summary>
            Helper class to generate the client proxy code using a combination of Reflection and CodeDom
            </summary>
            <remarks>This code is MSBuild-agnostic</remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.ClientProxyGenerator.fixedImports">
            <summary>
            These imports will be added to all namespaces generated in the client proxy file
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/> class accepting the server and reference assemblies as file names.
            </summary>
            <param name="assemblies">The set of absolute filenames of the assemblies containing the business objects.</param>
            <param name="references">The set of absolute filenames of any reference assemblies needed for analysis.</param>
            <param name="clientProxyCodeGenerationOptions">Set of options to control code generation.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.#ctor(System.Type,Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/> class accepting the type of a single domain service.
            </summary>
            <param name="domainServiceType">The domain service type containing business objects.</param>
            <param name="clientProxyCodeGenerationOptions">Set of options to control code generation.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.#ctor(System.Collections.Generic.IEnumerable{System.Type},Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/> class accepting a list of types for domain services.
            </summary>
            <param name="domainServiceTypes">List of domain service types containing business objects.</param>
            <param name="clientProxyCodeGenerationOptions">Set of options to control code generation.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GenerateProxyClass(System.String@)">
            <summary>
            Creates the client proxy types for the business objects.
            </summary>
            <param name="generatedCode">A string which is the complete contents of a source file for the client proxies.</param>
            <returns>True if code was generated successfully.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.LogError(System.String)">
            <summary>
            Logs an error.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.LogWarning(System.String)">
            <summary>
            Logs a warning.
            </summary>
            <param name="message">Error warning.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.LogMessage(System.String)">
            <summary>
            Logs a message.
            </summary>
            <param name="message">Message contents.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GetOrGenNamespace(System.String)">
            <summary>
            Generates a new CodeNamespace or reuses an existing one of the given name.
            </summary>
            <param name="namespaceName">The namespace name.</param>
            <returns>namespace with the given name.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GetNamespace(System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Gets the <see cref="T:System.CodeDom.CodeNamespace"/> for a <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.
            </summary>
            <param name="typeDecl">A <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.</param>
            <returns>A <see cref="T:System.CodeDom.CodeNamespace"/> or null.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GetOrGenNamespace(System.Type)">
            <summary>
            Generates a new CodeNamespace or reuses an existing one of the given name correponding to the namespace
            of the given type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to get or generate a <see cref="T:System.CodeDom.CodeNamespace"/> for.</param>
            <returns><see cref="T:System.CodeDom.CodeNamespace"/> with the given type's namespace.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.IsTypeShared(System.Type)">
            <summary>
            Determines whether the given type is shared by the client
            for which we are generating code
            </summary>
            <param name="type">The type to test.  It cannot be null.</param>
            <returns><c>true</c> if the type is visible to the client, 
            <c>false</c> if it is known as not shared, 
            and <c>null</c> if there is no PDB or user code to determine the answer.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.IsMethodShared(System.Reflection.MethodBase)">
            <summary>
            Determines whether the given method is shared by the client
            </summary>
            <param name="methodBase">The ctor or method to test</param>
            <returns><c>true</c> if the property is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.IsPropertyShared(System.Type,System.String,System.Type)">
            <summary>
            Determines whether the given property is shared by the client
            for which we are generating code.
            </summary>
            <remarks>This property may be shared if the type is a partial
            type and the client has arranged to supply additional properties
            in code that is shared between tires.
            </remarks>
            <param name="declaringType">The type containing the property</param>
            <param name="propertyName">The name of the property</param>
            <param name="propertyType">The type of the property</param>
            <returns><c>true</c> if the property is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GetSharedDomainContextType(System.Web.DomainServices.DomainServiceDescription)">
            <summary>
            If available, returns the type of the domain context that already exists
            in the client's set of references.  Used to avoid multiple generations
            of domain client when class libraries have multiple paths to a domain service
            </summary>
            <param name="domainServiceDescription">The domain service description for the domain context we are asking about.</param>
            <returns>The type of the domain client already available in the client's references.  Null if it doesn't yet exist.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.IsMethodShared(System.Type,System.String)">
            <summary>
            Determines whether the given method is shared by the client
            for which we are generating code.
            </summary>
            <remarks>This method may be shared if the type is a partial
            type and the client has arranged to supply additional method
            in code that is shared between tiers.
            </remarks>
            <param name="type">The type containing the method</param>
            <param name="methodName">The name of the method</param>
            <returns><c>true</c> if the method is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="methodBase"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GetOrGenEnumTypeDeclaration(System.Type)">
            <summary>
            Generates or retrieves a previously generated type declaration for
            the specified enum type.
            </summary>
            <param name="enumType">The enum type needed in the proxy classes.</param>
            <returns>The corresponding type declaration for the enum, already inserted into its corresponding namespace.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.CanExposeEnumType(System.Type,System.String@)">
            <summary>
            Determines whether the given enum type may be exposed to the client
            proxy classes.
            </summary>
            <param name="enumType">The enum type to test.</param>
            <param name="errorMessage">The error message that describes the problem (if <c>false</c> is returned).</param>
            <returns><c>true</c> if the proxy classes can legally refer to this enum type.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GenerateEnumTypeIfNecessary(System.Type)">
            <summary>
            Generates a type declaration for the given enum type if it
            is necessary.  This method caches its past work so can be
            called redundantly without harm.  If the enum type is shared,
            it is not generated, otherwise it is.  This method assumes
            <see cref="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.CanExposeEnumType(System.Type,System.String@)"/> has already given permission.
            </summary>
            <param name="enumType">The type to generate</param>
            <returns><c>true</c> if it was generated, <c>false</c> if it was detected as shared.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.GetExistingGeneratedEntityType(System.Type)">
            <summary>
            If it exists, returns the proxy entity type we have alread generated
            for the given entity type in an assembly referenced by the client.
            </summary>
            <remarks>
            This method uses the shared type service to determine whether the
            client can already see a generated proxy entity type corresponding
            to one we intend to generate.
            </remarks>
            <param name="entityType">The type of entity from which we intend to generate a proxy.</param>
            <returns>The type of the entity that has already been generated, or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.InitializeOptions(Microsoft.RiaServices.Tools.ClientProxyCodeGenerationContext)">
            <summary>
            Initializes internal state from the given set of code generation options.
            </summary>
            <param name="clientProxyCodeGenerationOptions">The options to use.  It cannot be null.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.InvokeDomainServiceCodeProcessor(Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem)">
            <summary>
            Examines a <see cref="T:System.Web.DomainServices.DomainServiceDescription"/> to discover and invoke <see cref="T:System.Web.DomainServices.CodeProcessor"/> types.
            </summary>
            <param name="workItem">The <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem"/> unit of work.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.FixupVBOptionStatements(System.String)">
            <summary>
            This method adds explicity VB Option statements:
            Option Explicit On
            Option Strict On
            Option Infer On
            Option Compare Binary
            </summary>
            <remarks>
            The VBCodeProvider automatically adds the Option Explicit and Strict to the generaged code and it
            has an undocumented way to explicitly set these two options:
            
             ' Option Strict On
             CompileUnit.UserData.Add("AllowLateBound", False)
             ' Option Explicit On
             CompileUnit.UserData.Add("RequireVariableDeclaration", True)
             
            but it does not generate the Option Infer and Compare code and provides no way to do it.
            This method provides a work-around this limitation and for code clarity we are setting all
            the options in one place.
            
            Setting all these options explicitly serves two purposes:
            - make sure the generated code is type-safe and 
            - reduce the test matrix particularly since the VB designer allows for setting these options at
              project level.
            </remarks>
            <param name="code">the VB code</param>
            <returns>the fixed up VB code</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.PreprocessProxyTypes">
            <summary>
            Preprocesses DomainService and Entity type names to enforce nesting restrictions and avoid conflicts later in codegen.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.RegisterTypeName(System.Type,System.String)">
            <summary>
            Registers an individual type name with the underlying codegen infrastructure.
            </summary>
            <param name="type">The type to register.</param>
            <param name="containingNamespace">The containing namespace.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.Dispose">
            <summary>
            Override of IDisposable.Dispose to handle implementation details of dispose
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.ClientProxyCodeGenerationOptions">
            <summary>
            Gets the options used to initialize this context.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.DomainServiceCatalog">
            <summary>
            Gets the current <see cref="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.DomainServiceCatalog"/>.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.IsCSharp">
            <summary>
            Gets a value indicating whether or not this instance is generating C# code.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.Logger">
            <summary>
            Gets a reference to the <see cref="T:Microsoft.RiaServices.Tools.ILogger"/>.  This cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.RootNamespace">
            <summary>
            Gets the root namespace of the target project. If it's not null or empty, 
            the code generator will try to change generated namespaces in such a way that the client and
            server namespaces match. Use this to get correct code generation for Visual Basic projects 
            with nonempty root namespace.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.ClientProjectName">
            <summary>
            Gets the user visible name of the client project.  This is used in errors and warnings.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.IsApplicationContextGenerationEnabled">
            <summary>
            Gets a value indicating whether to perform application-level codegen.
            </summary>
            <remarks>
            This property controls whether codegen occurs for classes that are not directly
            tied to domain services. This list of classes currently includes <c>WebContext</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.UseFullTypeNames">
            <summary>
            Gets a value indicating whether fully qualified type names
            should be used during code generation
            </summary>
            <remarks>
            If <c>false</c> the code generator will generated only short type names
            and add import statements.  If <c>true</c> the code generator will always
            generate fully qualified type names and avoid adding unnecessary imports.
            </remarks>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.SharedTypeService">
            <summary>
            Gets a reference to the optional <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService"/>
            </summary>
            <value>The reference will be null if this service is not available.
            </value>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem">
            <summary>
            Used to queue up <see cref="T:System.Web.DomainServices.CodeProcessor"/> work items.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.#ctor(System.Type,System.Web.DomainServices.DomainServiceDescription,System.Collections.Generic.Dictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Default constructor.
            </summary>
            <param name="codeProcessorType">The <see cref="T:System.Web.DomainServices.CodeProcessor"/> <see cref="T:System.Type"/>.</param>
            <param name="domainServiceDescription">The <see cref="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.DomainServiceDescription"/> associated with the provided <paramref name="codeProcessorType"/>.</param>
            <param name="typeMapping">The type-mapping that will be provided to the <see cref="T:System.Web.DomainServices.CodeProcessor"/>.</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.CodeProcessorType">
            <summary>
            Gets the <see cref="T:System.Web.DomainServices.CodeProcessor"/> <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.DomainServiceDescription">
            <summary>
            Gets the <see cref="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.DomainServiceDescription"/> associated with <see cref="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.CodeProcessorType"/>.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ClientProxyGenerator.CodeProcessorWorkItem.TypeMapping">
            <summary>
            Gets the <see cref="T:System.Web.DomainServices.CodeProcessor"/> type-mapping.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CodeGenUtilities">
            <summary>
            A collection of code generation utilities.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.Initialize(System.Boolean,System.Boolean,System.String)">
            <summary>
            Clears the static dictionaries used to track type and assembly references.
            </summary>
            <param name="isVisualBasic">A <see cref="T:System.Boolean"/> indicating whether Visual Basic code is being generated.</param>
            <param name="useFullTypeNames">A <see cref="T:System.Boolean"/> indicating whether to generate full type names.</param>
            <param name="rootNamespace">The root namespace used for Visual Basic codegen. Can be null or empty.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeCompliantFieldName(System.String)">
            <summary>
            Helper to generate a field name with a leading underscore and lowercase first letter
            </summary>
            <param name="fieldName">the field name to process</param>
            <returns>a new field name that begins with an underscore and lowercase first letter</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.CreateAttributeDeclaration(System.Type,Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates an attribute declaration based on the specified attribute
            </summary>
            <param name="attributeType">type of the attribute</param>
            <param name="proxyGenerator">A <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <returns>the attribute declaration</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeEqualToNull(System.CodeDom.CodeExpression)">
            <summary>
            Generates a test of the given expression against null (e.g. "if (x == null)" or "if (x is nothing)"
            </summary>
            <param name="value">The code expression to test</param>
            <returns>An expression that tests whether the input expression is null</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeNotEqualToNull(System.CodeDom.CodeExpression)">
            <summary>
            Generates a test of the given expression against not being null (e.g. "if (x != null)" or "if (x is nothing) = false"
            </summary>
            <param name="value">The value to test</param>
            <returns>The new code expression containing the test</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeNotEqual(System.Type,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression,System.Boolean)">
            <summary>
            Generates a test to determine if the given expressions are not equal.
            </summary>
            <param name="clrType">The Type of the values being compared.</param>
            <param name="left">The left side of the test.</param>
            <param name="right">The right side of the test.</param>
            <param name="isCSharp">Indicates whether or not the output should be C# specific.</param>
            <returns>A new <see cref="T:System.CodeDom.CodeExpression"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeEqual(System.Type,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression,System.Boolean)">
            <summary>
            Generates a test to determine if the given expressions are equal.
            </summary>
            <param name="clrType">The Type of the values being compared.</param>
            <param name="left">The left side of the test.</param>
            <param name="right">The right side of the test.</param>
            <param name="isCSharp">Indicates whether or not the output should be C# specific.</param>
            <returns>A new <see cref="T:System.CodeDom.CodeExpression"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeDelegateCreateExpression(System.Boolean,System.CodeDom.CodeTypeReference,System.String)">
            <summary>
            Creates an expression for creating a delegate.
            </summary>
            <param name="isCSharp">If this is C#</param>
            <param name="delegateType">The delegate type</param>
            <param name="methodName">The name of the method on 'this' to invoke</param>
            <returns>A CodeExpression that will create a delegate to invoke that method</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.MakeEventRaiseStatement(System.Boolean,System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression[])">
            <summary>
            Creates a statement for raising an event.
            </summary>
            <param name="isCSharp">If this is C#.</param>
            <param name="ev">The event to raise.</param>
            <param name="parameters">The parameters to pass when raising the event.</param>
            <returns>The statement that raises the event.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.GetContractNamespace(System.Type)">
            <summary>
            Gets the data-contract namespace for an entity.
            </summary>
            <param name="entityType">The type of entity.</param>
            <returns>Either the assembly-level contract namespace, or the entity type's CLR namespace.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.TranslateType(System.Type)">
            <summary>
            Performs necessary type translation for the given type.
            This method is called during client proxy generation.
            </summary>
            <param name="type">type to be translated</param>
            <returns>translated type</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.GetTypeReference(System.Type,Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.
            </summary>
            <param name="type">A CLR type.</param>
            <param name="proxyGenerator">A <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.GetTypeReference(System.Type,Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.
            </summary>
            <param name="type">A CLR type.</param>
            <param name="proxyGenerator">A <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <param name="optimizeAttributeName">Indicates whether or not the optimize <see cref="T:System.Attribute"/> names by removing the "Attribute" suffix.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.GetTypeReference(System.String,System.String,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a given <see cref="T:System.Type"/> full name and containing namespace.
            </summary>
            <remarks>
            If <paramref name="userType"/> is <c>true</c>, the <paramref name="typeFullName"/> value will be optimized
            when we are emitting Visual Basic code with a non-null root namespace.
            </remarks>
            <param name="typeFullName">The <see cref="T:System.Type"/> full name.</param>
            <param name="containingNamespace">The namespace that will contain the <paramref name="typeFullName"/> reference.</param>
            <param name="userType">A <see cref="T:System.Boolean"/> indicating whether or not the <paramref name="typeFullName"/> is a user type.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for the provided <paramref name="typeFullName"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.GetSafeTypeName(System.String,System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.Type"/> name that is safe to use.
            </summary>
            <remarks>
            This method is not safe for use with generic types.
            </remarks>
            <param name="typeFullName">The full name of the <see cref="T:System.Type"/>.</param>
            <param name="containingNamespace">The containing namespace.</param>
            <param name="userType">A <see cref="T:System.Boolean"/> indicating whether or not the <paramref name="typeFullName"/> is a user type.</param>
            <returns>A string representing the safe type name.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.CreateTypeDeclaration(System.String,System.String)">
            <summary>
            Creates a type declaration with the specified name.
            </summary>
            <param name="typeName">The name of the type.</param>
            <param name="typeNamespace">The type's namespace.</param>
            <returns>A type declaration.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.CreateTypeDeclaration(System.Type)">
            <summary>
            Creates a type declaration for the specified CLR type.
            </summary>
            <param name="type">The CLR type.</param>
            <returns>A type declaration.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.RegisterTypeName(System.Type,System.String)">
            <summary>
            Checks if a using a <see cref="T:System.Type"/>'s short-name will generate an ambiguous type reference error.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to examine.</param>
            <param name="containingNamespace">The namespace in which to check for <see cref="T:System.Type"/> short-name conflicts.</param>
            <returns>A Boolean indicating whether or not the <see cref="T:System.Type"/> will generate an ambiguous type 
            reference error.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.CreateDataContractAttributeDeclaration(System.Type,Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> for a <see cref="T:System.Runtime.Serialization.DataContractAttribute"/>
            </summary>
            <param name="sourceType">The type to which the attribute will be applied (to use as a reference)</param>
            <param name="proxyGenerator">The client proxy generator</param>
            <param name="referencingType">The type referencing this declaration</param>
            <returns>The new attribute declaration</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.CreateEnumMemberAttributeDeclaration(System.Reflection.MemberInfo,Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates an attribute declaration for <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/>
            </summary>
            <param name="memberInfo">The member that may contain an existing <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/></param>
            <param name="proxyGenerator">The proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <returns>A new attribute declaration</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.CreateEnumTypeDeclaration(System.Type,Microsoft.RiaServices.Tools.ClientProxyGenerator)">
            <summary>
            Creates a new <see cref="T:System.CodeDom.CodeTypeDeclaration"/> that is the generated form of
            the given <paramref name="enumType"/>.
            </summary>
            <param name="enumType">The enum type to generate.</param>
            <param name="proxyGenerator">The current proxy generator context.</param>
            <returns>The newly generated enum type declaration.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.GetDocComments(System.String)">
            <summary>
            Takes a multi-line comment defined in a resource file and correctly formats it as a doc comment
            for use in code-dom.
            </summary>
            <param name="resourceComment">The comment to format as a doc comment. This cannot be null.</param>
            <returns>A collection of comment statements that matches the input resource</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.RegisterTypeName(System.String,System.String,System.String)">
            <summary>
            Checks if a using a <see cref="T:System.Type"/>'s short-name will generate an ambiguous type reference error.
            </summary>
            <param name="typeNamespace">The type namespace.</param>
            <param name="typeName">The type name to check for conflict.</param>
            <param name="containingNamespace">The namespace in which to check for <see cref="T:System.Type"/> short-name conflicts.</param>
            <returns>A Boolean indicating whether or not the <see cref="T:System.Type"/> will generate an ambiguous type 
            reference error.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.TranslateNamespace(System.Type,Microsoft.RiaServices.Tools.ClientProxyGenerator)">
            <summary>
            In cases where we are emitting types that aren't already in the root namespace, 
            we need to translate the generated type namespace so that it resides in the 
            root namespace.
            </summary>
            <remarks>
            Here, we're interested in cases where we're generating VB code
            and our target project has a non-null root namespace.  
            </remarks>
            <param name="type">The type who namespace should be translated</param>
            <param name="proxyGenerator">The current proxy generator</param>
            <returns>A translated namespace string</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CodeGenUtilities.OptimizeAttributeName(System.Type)">
            <summary>
            Returns an attribute short name if the <paramref name="type"/> is an 
            <see cref="T:System.Attribute"/> with a name ending in 'Attribute'.
            </summary>
            <remarks>
            For example, an attribute named "QueryAttribute" can be optimized to 
            just "Query".
            </remarks>
            <param name="type">The attribute type.</param>
            <returns>A suitable attribute type name.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask">
            <summary>
            Custom MSBuild task to generate client proxy classes from server's entities and business objects
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ExecuteInternal">
            <summary>
            Invoked by MSBuild to run this task
            </summary>
            <returns>true if task succeeds</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GenerateClientProxies">
            <summary>
            Generates the client proxies.
            </summary>
            <remarks>
            This method validates the presence of the necessary input server assemblies and
            then invokes the code generation logic to create a file containing the client
            proxies for the discovered server's Business Objects.  If the file already exists
            and is newer than the inputs, this method does nothing.
            <para>In all success paths, the client proxy file will be added to the list of generated
            files so the custom targets file can add them to the @Compile collection.</para>
            </remarks>
            <returns><c>true</c> if the client proxies were generated or were already up to date</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GetSharedAndLinkedFiles">
            <summary>
            Returns the computed list of shared and linked files between the server and client projects.
            </summary>
            <remarks>This list includes all shared files named via the "*.shared.* pattern as well
            as files found via file links.
            </remarks>
            <returns>The set of absolute file names that are the files both client and server see</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.IsFileShared(System.String)">
            <summary>
            Simple evaluator to determine whether a file matches the "*.shared.*" pattern
            </summary>
            <param name="fileName">The full or short name of the file to test.</param>
            <returns><c>true</c> means it matches the pattern for a shared file</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ComposeDestinationPath(System.String,System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Computes the full path of the destination file name.
            </summary>
            <remarks>This method is responsible for preserving any folder hierarchies
            in the event the source file is not directly in the root.</remarks>
            <param name="sourceFilePath">The full path to the source file</param>
            <param name="sourceDirectory">The root directory of the server</param>
            <param name="destinationDirectory">The root directory of the destination</param>
            <returns>A string representing the full destination file path.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GetSubfolders(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Returns the ordered set of folder names the given <paramref name="sourceFileDirectory"/>
            lies under the given <paramref name="sourceDirectory"/>
            </summary>
            <remarks>In other words, this method returns the set of folder names that must be
            created under the eventual destination folder to preserve the folder hiearchy of
            the source.  An empty list means <paramref name="sourceFileDirectory"/> is not
            located under <paramref name="sourceDirectory"/> or is the same folder.
            </remarks>
            <param name="sourceDirectory">The root directory of the server project.</param>
            <param name="sourceFileDirectory">The directory in which a file-to-be-copied resides</param>
            <returns>The ordered set of folder names.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.WarnIfNoPdb(System.String)">
            <summary>
            Issue a build warning if we cannot find a PDB file for the given assembly
            </summary>
            <param name="assemblyFile">The name of the assembly file whose PDB file we need.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.PurgeOrphanFiles">
            <summary>
            This method deletes any files that we generated on a previous execution,
            but which we did not generate this time.  This is how renamed and deleted server files
            files get removed from the client project without the user needing to do an explicit clean.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.WriteFileList">
            <summary>
            Creates a file listing all the generated files.  Will be used for Clean operation.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.IsClientReferenceListChanged">
            <summary>
            Determines whether the list of client references has changed since
            the last time code-gen happened.
            </summary>
            <returns><c>true</c> if the list of references has changed since the last time we ran code-gen</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ReadClientReferenceList">
            <summary>
            Read the list of client reference assemblies we last code-genned against
            into a dictionary, keyed by file name and with the timestamp as a string
            </summary>
            <returns>dictionary containing last set of known references</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.WriteClientReferencesList">
            <summary>
            Writes out all the client assembly references and their timestamps
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.CreateSharedTypeService">
            <summary>
            Creates a new instance of an <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService"/> that is able to determine
            which server types and members are in shared files or in client assembly references.
            </summary>
            <returns>A new instance of a shared type service.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.AddGeneratedFile(System.String)">
            <summary>
            Adds the given file name to the list returned by <see cref="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GeneratedFiles"/>.
            </summary>
            <param name="fileName">The absolute path of a file.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.AddCopiedFile(System.String)">
            <summary>
            Adds the given file name to the list returned by <see cref="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.CopiedFiles"/>.
            </summary>
            <param name="fileName">The absolute path of a file.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GetSharedFilesByProject">
            <summary>
            Computes the set of all shared files for all projects.
            </summary>
            <returns>A dictionary, keyed by project path and containing the list of shared files from that project.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.CopySharedFiles">
            <summary>
            Copy the specified files to the output directory
            </summary>
            <remarks>
            This subtask is done here (rather than reusing the MSBuild Copy task directly) so that it
            can interact with the Visual Studio TextBuffers.
            </remarks>
            <returns><c>true</c> if the files were successfully copied or were already up to date</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.CopyFile(System.String,System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Copies the specified file from the server to the client project
            </summary>
            <param name="sourceFilePath">Full path to the source file</param>
            <param name="sourceDirectory">The root directory of the server</param>
            <param name="destinationDirectory">The root directory of where generated code should go in the client project</param>
            <returns>A <see cref="T:System.Boolean"/> indicating whether or not he operation was successful.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GetServerAssemblies">
            <summary>
            Returns the list of absolute filenames of the input assemblies
            </summary>
            <returns>list of filenames of input assemblies</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GetReferenceAssemblies">
            <summary>
            Returns the collection of the full paths to the input reference assemblies.
            </summary>
            <returns>The list of reference assembly file names</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.EnsureAssembliesExist(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Validates existance of necessary files.  Returns false if any are missing.  Also logs an error message.
            This method explicitly does not check for an empty list, only that the list contains only valid items.
            </summary>
            <param name="assemblies">The set of assembly names to test</param>
            <returns><c>true</c> if all the assemblies exist.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GenerateProxyFileName(System.String)">
            <summary>
            Create the name of the filename where the proxy code will be written
            </summary>
            <param name="serverAssemblyName">The name of the server assembly, to be used in forming the name</param>
            <returns>The base name.  It will not include a path.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.NormalizedTaskItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ITaskItem},System.String)">
            <summary>
            Returns the set of <see cref="T:Microsoft.Build.Framework.ITaskItem"/>s normalized to be relative to the given
            directory.
            </summary>
            <param name="items">The list of task items to normalize.  Null is permitted and results in empty list returned</param>
            <param name="directory">The folder path to use as the root if the paths are relative.</param>
            <returns>A new string collection of the full paths of the file names in the given <paramref name="items"/> array.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.NormalizeProjectPaths">
            <summary>
            Helper method to convert input project paths to full path names.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ClientProjectRootNamespace">
            <summary>
            Gets or sets root namespace of the client project
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ServerAssemblies">
            <summary>
            Gets or sets the list of core server assemblies to analyze to extract the business objects
            </summary>
            <value>
            This property is required.  Normal MSBuild semantics will not permit this task
            to be used unless it has been set.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ServerReferenceAssemblies">
            <summary>
            Gets or sets the list of reference assemblies used to build the server assemblies
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ClientReferenceAssemblies">
            <summary>
            Gets or sets the list of reference assemblies used to build the server assemblies
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ClientAssemblySearchPaths">
            <summary>
            Gets or sets a value containing the paths to search for
            client assemblies when it is necessary to locate referenced
            assemblies.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ClientSourceFiles">
            <summary>
            Gets or sets the list of source files used by the client project (i.e. the @(Compile) item collection)
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.Language">
            <summary>
            Gets or sets the language in which to generate the client proxies.
            </summary>
            <value>
            Currently supported values are currently "C#" or "VB"
            This property is required.  Normal MSBuild semantics will not permit this task
            to be used unless it has been set.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ServerProjectPath">
            <summary>
            Gets or sets the path to the server's project file
            </summary>
            <value>This value is required.</value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.IsClientApplication">
            <summary>
            Gets the string form of a boolean that indicates
            whether the client project is an application.
            </summary>
            <value>A string value of "true" means the client project
            is an application.  If this value is empty or any other
            string value, the client project is assumed to be a
            class library.</value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.UseFullTypeNames">
            <summary>
            Gets or sets a value indicating whether the code generator
            should generate fully qualified type names.
            </summary>
            <value>
            A string value of "true" means fully qualified type names
            should be generated.  Any other value indicates the code
            generator can use short type names at its discretion.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GeneratedFiles">
            <summary>
            Gets the list of code files created by this task.
            </summary>
            <value>
            This value can be read at any time, but it will be valid only after
            the task has completed.  Its results are not predictable if the task
            has terminated abnormally.  This list contains only those code files
            created by the code-generation task.  It does not include any of the
            files named *.shared.".
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.SharedFiles">
            <summary>
            Gets the list of files copied by this task from the server project(s)
            </summary>
            <value>
            This value can be read at any time, even before the task has executed.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.CopiedFiles">
            <summary>
            Gets the list of shared files that have been copied into the client project
            </summary>
            <value>
            This value can be read at any time, but it will be valid only after
            the task has completed.  Its results are not predictable if the task
            has terminated abnormally.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.LinkedFiles">
            <summary>
            Gets the list of files shared with the server project(s) via file links.
            </summary>
            <value>
            This value can be read at any time, but it will be valid only after
            the task has completed.  Its results are not predictable if the task
            has terminated abnormally.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.SharedFilesByProject">
            <summary>
            Gets a dictionary, keyed by project path and containing all the *.shared.* files known
            to that project.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.LinkedFilesNormalized">
            <summary>
            Gets the set of linked files visible to the client project and the server project, including projects
            referenced by the server project.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.OutputFiles">
            <summary>
            Gets the collection of files written by this task.
            </summary>
            <value>
            This list is a concatenation of <see cref="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.GeneratedFiles"/> and <see cref="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.CopiedFiles"/>.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ClientAssemblyPathsNormalized">
            <summary>
            Returns the set of full paths of folders to search for framework and SDK assemblies
            when we need to resolve assembly references.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.IsClientApplicationAsBool">
            <summary>
            Gets the boolean equivalent of <see cref="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.IsClientApplication"/>
            </summary>
            <value><c>true</c> means the client project is an application,
            otherwise it is a class library only.</value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.UseFullTypeNamesAsBool">
            <summary>
            Gets the boolean equivalent of <see cref="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.UseFullTypeNames"/>
            </summary>
            <value><c>true</c> full type names should be used in code generation.</value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ServerProjectDirectory">
            <summary>
            Gets the absolute path to the server's directory
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.FileExtension">
            <summary>
            Gets the file extension to use for the current language
            </summary>
            <value>Ideally, the CodeDom should provide this, but we want to avoid loading the provider
            when we are checking whether there is really any work to do.</value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.ServerProjectSourceFileCache">
            <summary>
            Gets the cache of server-side source files known to the
            server project and all the projects it references.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask.LinkedServerProjectCache">
            <summary>
            Gets the cache of client project references and their corresponding
            server projects if they have a RIA Link.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.EntityProxyGenerator">
            <summary>
            Proxy generator for an entity.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ProxyGenerator">
            <summary>
            Abstract base class for all proxy generators.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProxyGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.ProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">Our root client proxy generator holding the compilation context.  Cannot be null.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProxyGenerator.Generate">
            <summary>
            Invoked after initialization to product proxy code
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ProxyGenerator.ClientProxyGenerator">
            <summary>
            Gets the main client proxy generator in whose compilation context we are generating code
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.EntityProxyGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.Web.DomainServices.DomainServiceDescription,System.Type,System.Collections.Generic.ICollection{System.Web.DomainServices.DomainServiceDescription},System.Collections.Generic.IDictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.EntityProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="domainServiceDescription">The DomainServiceDescription that contains the entity</param>
            <param name="entityType">The type of the entity.  Cannot be null.</param>
            <param name="allDomainServiceDescriptions">Collection of all <see cref="T:System.Web.DomainServices.DomainServiceDescription"/> defined in this project</param>
            <param name="typeMapping">A dictionary of <see cref="T:System.Web.DomainServices.DomainService"/> and related entity types that maps to their corresponding client-side <see cref="T:System.CodeDom.CodeTypeReference"/> representations.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.EntityProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for an entity
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.EntityProxyGenerator.GetReverseAssociation(System.ComponentModel.PropertyDescriptor,System.ComponentModel.DataAnnotations.AssociationAttribute)">
            <summary>
            For the specified association property, get the association member on the other side of the
            association.  For example, given PurchaseOrderDetail.Product, will return Product.PurchaseOrderDetails.
            </summary>
            <param name="propertyDescriptor">The assocation property <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</param>
            <param name="assocAttrib">The association property <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute"/>.</param>
            <returns>The association member on the other side of the specified association property.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.EntityProxyGenerator.CanGenerateProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if this code generator should/can generate a member for the
            specified source property type.
            </summary>
            <param name="propertyDescriptor">The source property.</param>
            <returns>true if this code generator should/can generate a member for the Type.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.EntityProxyGenerator.GenEntityProperty(System.CodeDom.CodeTypeDeclaration,System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Generates a property getter/setter pair into the given proxy class to match the given property info.
            </summary>
            <param name="proxyClass">Class into which to generate code.</param>
            <param name="propertyDescriptor">PropertyDescriptor for the property to generate for.</param>
            <param name="propertyName">Name to use for the generated property.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.IndentationLevel">
            <summary>
            This enum is designed to be used with type snippet generators.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.IndentationLevel.None">
            <summary>
            No indentation at all.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.IndentationLevel.GlobalNamespace">
            <summary>
            Type declared in the global namespace (no namespace)
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.IndentationLevel.Namespace">
            <summary>
            Type declared inside a namespace.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.IndentationLevel.NestedType">
            <summary>
            Type declared inside another type in the global namespace.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.IndentationLevel.NamespaceNestedType">
            <summary>
            Type declared inside another type that belongs to a namespace.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.LinkedServerProjectCache">
            <summary>
            Class to maintain a cache of RIA Links (&lt;LinkedServerProject&gt;)
            visible from the project references of a client project.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.#ctor(System.String,System.String,Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Creates a new instance
            </summary>
            <param name="rootProjectPath">Full file path to client project to use as root.</param>
            <param name="historyFilePath">Full file path to file to read and write in-memory cache.</param>
            <param name="logger">Instance of an <see cref="T:Microsoft.RiaServices.Tools.ILogger"/> to receive messages.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.GetLinkedServerProjectSources(System.String)">
            <summary>
            Given the name of a server project file known to be the destination of a RIA Link,
            this method returns all the client projects that have a RIA Link to it.
            </summary>
            <remarks>
            Generally there is only one client file in a solution pointing to any given server
            project via a RIA link, but we use a collection because it is possible to have many.
            </remarks>
            <param name="linkedServerProject">Full path to server project file known to be the destination of a RIA Link</param>
            <returns>The set of all client project paths that have a RIA link to <paramref name="linkedServerProject"/></returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.SaveCacheToFile">
            <summary>
            Writes our in-memory cache to the history file specified in the ctor.
            </summary>
            <remarks>
            If the in-memory cache shows the client project has no project references
            and therefore no RIA Links, the file will be written, but it will be empty.
            This is intentional so that a subsequent <see cref="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.LoadCacheFromFile"/>
            can return to that empty state rather than force reopening the client project.
            </remarks>
            <returns><c>true</c> means the file was written, <c>false</c> if nothing was written.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.LoadCacheFromFile">
            <summary>
            Loads the internal state from the history file passed to the ctor.
            </summary>
            <remarks>
            If the root project has been modified since the history file
            was written, the entire cache is considered invalid and <c>false</c> is returned.
            If any cached project has been touched since the cache was last written, just
            is portion of the cache will be reloaded from the project file.
            </remarks>
            <returns>A <c>true</c> means the cache was loaded from the history file successfully.
            If we detect the cache is out of date or does not exist, a <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.LoadCacheFromProject">
            <summary>
            Loads the in-memory cache by reading the root project, discovering all the
            project references, and evaluating the &lt;LinkedServerProject&gt; property
            (i.e. the RIA Link) for each.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.LinkedServerProjectCache.LoadRiaLinkFromProject(System.String)">
            <summary>
            Given the full path to a project, return the value of the &lt;LinkedServerProject&gt; property,
            expanded to a full path.
            </summary>
            <param name="projectPath">The full path to the project possibly containing this property.</param>
            <returns>The full path of the RIA link.  It may be null or empty.</returns>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.IsFileCacheCurrent">
            <summary>
            Gets the value indicating whether the file on disk is
            current with respect to the in-memory contents.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.ProjectFileReader">
            <summary>
            Gets an instance of a <see cref="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.ProjectFileReader"/>
            that can be used to read MSBuild project files.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.LinkedServerProjectsByProject">
            <summary>
            Gets the dictionary associating client project paths with their server project identified
            via a RIA Link.
            </summary>
            <remarks>
            This dictionary will lazily load from the cache or the project the first time it is accessed.
            The key is the full path to a client project found via a project reference from our root project.
            The value associated with the key is the full path of the server project identified via a RIA Link.
            Null or empty values are legal and indicate the corresponding client project has no RIA Link.
            Keys are case-insensitive, so keys differing only in case are considered the same.
            There is no entry for the root project itself.
            </remarks>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.Item(System.String)">
            <summary>
            Indexer property that associates a RIA Link project with a given client <paramref name="projectPath"/>
            </summary>
            <value>
            The full name of the server project considered as the target of a RIA Link
            from the perspective of the given <paramref name="projectPath"/>.
            A null or empty string means there is no RIA Link for <paramref name="projectPath"/>
            </value>
            <param name="projectPath">Full path to the client project file considered the source of the RIA Link.</param>
            <returns>The linked server project declared in <paramref name="projectPath"/>. It may be null or empty.
            </returns>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.ProjectReferences">
            <summary>
            Gets the set of full project paths to all projects referenced by
            our root project.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.LinkedServerProjects">
            <summary>
            Gets the set of full project paths to all the server projects
            visible through a RIA Link from one of the client projects
            found in <see cref="P:Microsoft.RiaServices.Tools.LinkedServerProjectCache.ProjectReferences"/>
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.AttributeDeclaration">
            <summary>
            Type used to represent an <see cref="T:System.Attribute"/> declaration and its requirements.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.AttributeDeclaration.#ctor(System.Type)">
            <summary>
            Constructor accepting the <see cref="T:System.Attribute"/> <see cref="T:System.Type"/>.
            </summary>
            <param name="attributeType">The <see cref="T:System.Attribute"/> <see cref="T:System.Type"/> to represent. Cannot be null.</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.HasErrors">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> has errors.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.AttributeType">
            <summary>
            Gets the <see cref="T:System.Attribute"/> <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.ConstructorArguments">
            <summary>
            Gets a collection of constructor arguments.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.Errors">
            <summary>
            Gets a collection of error messages.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.NamedParameters">
            <summary>
            Gets a dictionary of named parameters.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.RequiredTypes">
            <summary>
            Gets a collection of required shared types.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.RequiredMethods">
            <summary>
            Gets a collection of required shared methods.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.AttributeDeclaration.RequiredProperties">
            <summary>
            Gets a collection of required shared properties.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.DataMemberAttributeBuilder">
            <summary>
            DataMemberAttribute custom attribute builder.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder">
            <summary>
            Standard custom attribute builder.
            </summary>
            <remarks>This custom attribute builder class generates a CodeDom custom attribute declaration
            for most well-formed custom attribute types.  To be well formed, an attribute must either expose
            public setters for every public property it exposes, or it must provide a constructor whose
            parameter names match properties for which there is no public setter.
            </remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ICustomAttributeBuilder">
            <summary>
            Contract for codegen attribute builders.
            </summary>    
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ICustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An <see cref="T:System.Attribute"/> instance to create a <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
            <exception cref="T:System.ArgumentException">if it cannot generate the provided <paramref name="attribute"/>.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An attribute instance to create a <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Given the name of a property from which we fetched a property, returns the
            name of the property we should use to set the value.  A null return means
            this property should be ignored by code gen.
            </summary>
            <param name="propertyInfo">The getter property to consider.</param>
            <param name="attribute">The current attribute instance we are considering.</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.DefaultInstanceForType(System.Type)">
            <summary>
            Returns the default object instance for the given type, effectively default(T)
            </summary>
            <param name="t">The type whose default is needed</param>
            <returns>The default value for that type.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.CanValueBeAssignedToType(System.Type,System.Object)">
            <summary>
            Determines whether the given value may legally be assigned to the specified type
            </summary>
            <param name="type">The type to which it will be assigned</param>
            <param name="value">The value to test</param>
            <returns><c>true</c> if the value can legally be assigned</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.GetUnsettableProperties(System.Collections.Generic.IEnumerable{Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap})">
            <summary>
            Retrieves the list of properties that have no public setter
            </summary>
            <param name="propertyMaps">A list of properties to consider</param>
            <returns>The subset of the input list containing all properties lacking a public setter</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.FindBestConstructor(System.Collections.Generic.ICollection{Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
            <summary>
            Locates the best constructor that allows all the given properties to be set.
            </summary>
            <param name="propertyMaps">The set of properties we want to set via a constructor</param>
            <param name="currentValues">The set of current values for these properties</param>
            <param name="attributeType">The type of attribute whose ctor we need to call</param>
            <returns>The list of constructor parameters, in the order they must be passed to the ctor, to invoke the best constructor.  
            Null means no constructor is available that can set them.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.ParametersAcceptAllProperties(System.Reflection.ParameterInfo[],System.Collections.Generic.ICollection{Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Determines whether the given set of constuctor parameters can legally be assigned the
            given set of property values.
            </summary>
            <param name="parameters">The list of constructor parameters to consider</param>
            <param name="propertyMaps">The list of properties we would assign into these parameters</param>
            <param name="currentValues">The current values for the properties</param>
            <returns><c>true</c> if all the properties can be assigned to those parameters</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.GetPropertyValues(System.Collections.Generic.IEnumerable{Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Attribute)">
            <summary>
            Builds and returns a dictionary of all the current values for all the specified properties in a given
            object instance.
            </summary>
            <param name="propertyMaps">The set of properties to read</param>
            <param name="attribute">The attribute instance to fetch the property values from</param>
            <returns>The dictionary of name-value pairs, one per property</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.GetDefaultPropertyValues(System.Collections.Generic.IEnumerable{Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Attribute,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Builds and returns a dictionary of all the default values for the given properties for a given attribute type
            </summary>
            <param name="propertyMaps">The set of properties to read</param>
            <param name="attribute">The current attribute instance</param>
            <param name="currentValues">The current values for the attribute instance for which we are generating code</param>
            <returns>The dictionary of name-value pairs containing default values for each property</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.GetNonDefaultProperties(System.Collections.Generic.IEnumerable{Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Retrieves the list of properties that contain values other than the defaults for an attribute
            </summary>
            <remarks>This list becomes the set of properties for which explicit code gen is required, assuming
            that if they are not set, they will retain their default values.</remarks>
            <param name="propertyMaps">The set of properties to consider</param>
            <param name="currentValues">The current values for the properties</param>
            <param name="defaultValues">The default values for the properties</param>
            <returns>The set of properties whose current values are other than their default values</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.CanPropertyBeSetDeclaratively(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the given property could legally be set via an
            Attribute declaration, where only constants or arrays of constants are allowed
            </summary>
            <param name="property">The property to test</param>
            <returns><c>true</c> means the property could be set via an Attribute declaration</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.BuildPropertyMaps(System.Attribute)">
            <summary>
            Constructs a collection of PropertyMaps.  A PropertyMap allows a "getter" property to
            redirect to a different "setter" property.  Properties that should not be treated by
            code gen don't appear in the map.  The getter/setter mapping is done because it is
            a relatively common scenario to have calculated properties that either cannot be set
            directly or should be effectively set through a different property.
            </summary>
            <param name="attribute">The current attribute instance</param>
            <returns>A list of <see cref="T:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap"/> instances.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap">
            <summary>
            Helper class used internally.  A PropertyMap is simply a tuple that relates a property getter with its appropriate setter.
            Normally these are identical, but a surprising number of attributes expose calculated getters that are actually influenced
            by some other setter.  By keeping these concepts separate, it is easier to allow derived classes to map computed getters
            to a better property.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap.#ctor(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap"/> class.
            </summary>
            <param name="getter">The property's getter <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <param name="setter">The property's setter <see cref="T:System.Reflection.PropertyInfo"/>.</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap.Getter">
            <summary>
            Gets the property's getter <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.StandardCustomAttributeBuilder.PropertyMap.Setter">
            <summary>
            Gets the property's setter <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DataMemberAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Overrides the MapProperty method to simply to remove Order from the list of properties to generate.
            </summary>
            <param name="propertyInfo">The getter property to consider</param>
            <param name="attribute">The current attribute instance we are considering</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
            <remarks>Specifically for the <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> type, this method returns null if the property 
            name is "Order".</remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.EditableAttributeBuilder">
            <summary>
            Custom attribute builder generates <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> representations of
            <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.EditableAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Generates a <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> representation of an 
            <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> instance.
            </summary>
            <param name="attribute">The <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/>.</param>
            <returns>A <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> representation of 
            <paramref name="attribute"/>.</returns>
            <exception cref="T:System.InvalidCastException">if <paramref name="attribute"/> is 
            not a <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/>.</exception>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.NotificationMethodGenerator">
            <summary>
            Utility class for generating notification partial methods and method calls. 
            These methods are of the form: 
            partial void OnCreated(), OnPropertyNameCalled/Calling(args...), OnCustomMethodInvoked/Invoking(args ...)
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.NotificationMethodGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The current <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/>.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator,Microsoft.RiaServices.Tools.IndentationLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.NotificationMethodGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The current <see cref="T:Microsoft.RiaServices.Tools.ClientProxyGenerator"/>.</param>
            <param name="indentLevel">The indentation level for the code to write.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.AddMethodFor(System.String,System.String)">
            <summary>
            Adds a method invoke expression and a partial method definition based on the specified base method name
            to the internal method collection.
            </summary>
            <param name="baseMethodName">base method name w/o the On prefix (like Created for OnCreated)</param>
            <param name="comments">the comments for the partial property definition</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.AddMethodFor(System.String,System.CodeDom.CodeParameterDeclarationExpression,System.String)">
            <summary>
            Adds a method invoke expression and a partial method definition based on the specified base method name
            to the internal method collection.
            </summary>
            <param name="baseMethodName">base method name w/o the On prefix (like Created for OnCreated)</param>
            <param name="parameterDeclaration">parameter declaration for the only param of the method to be generated</param>
            <param name="comments">the comments for the partial property definition</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.AddMethodFor(System.String,System.CodeDom.CodeParameterDeclarationExpressionCollection,System.String)">
            <summary>
            Adds a method invoke expression and a partial method definition based on the specified base method name
            to the internal method collection.
            </summary>
            <param name="baseMethodName">base method name w/o the On prefix (like Created for OnCreated)</param>
            <param name="parameters">if provided, the parameters for the method to be generated</param>
            <param name="comments">the comments for the partial property definition</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.GetMethodInvokeExpressionStatementFor(System.String)">
            <summary>
            Gets a CodeMethodStatement from the generated CodeMethodInvokeExpression for the specified method/property name.
            </summary>
            <param name="baseMethodName">The name of the method/property for which a notification method was generated</param>
            <returns>Returns the expression statement.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.CreateNotificationPartialMethod(System.String,System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>
            Generates a notification partial method for the specified method, this is of the form
            OnCreated(args...) for the Created(args...) method.
            </summary>
            <param name="methodName">The name of the method to create a notification method for.</param>
            <param name="parameters">the method parameters, if any.</param>
            <returns>Code snippet for the notification partial method.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.NotificationMethodGenerator.SetGlobalTypeReference(System.CodeDom.CodeTypeReference)">
            <summary>
            Processes a <see cref="T:System.CodeDom.CodeTypeReference"/> and sets its <see cref="T:System.CodeDom.CodeTypeReferenceOptions"/>
            such that global type references will be emitted.
            </summary>
            <param name="codeTypeReference">The <see cref="T:System.CodeDom.CodeTypeReference"/> to update.</param>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.NotificationMethodGenerator.OnCreatedMethodInvokeExpression">
            <summary>
            Known method invoke expression of the form:
            this.OnCreated();
            </summary>
            <returns>Returns the invoke expression.</returns>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.NotificationMethodGenerator.PartialMethodsSnippetBlock">
            <summary>
            Gets all generated partial name snippets generated by the AddMethodFor methods, in the form:
            #region [region comment]
            partial void OnMethodCalled();
            partial void OnMethodCalling();
            #endregion
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator">
            <summary>
            PDB-based implementation of <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISourceFileLocationService"/> to locate source files for types or methods.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.ISourceFileLocationService">
            <summary>
            General purpose interface to locate the names of the files
            used to define types or type members.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.ISourceFileLocationService.GetFilesForType(System.Type)">
            <summary>
            Retrieves the collection of file names that jointly define
            the given type.
            </summary>
            <param name="type">The type to test.  It cannot be null.</param>
            <returns>A collection of full file names that define the type.  It may be empty.  
            There are no guarantees the files in this collection can be opened.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.ISourceFileLocationService.GetFileForMethod(System.Reflection.MethodBase)">
            <summary>
            Retrieves the name of the file that defines the given method or constructor.
            </summary>
            <param name="methodBase">The method or constructor to test.  It cannot be null.</param>
            <returns>The full file name or null if it cannot be determined.  
            There are no guarantees the files can be opened.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.GetFilesForType(System.Type)">
            <summary>
            Returns the collection of files that jointly define the given type
            </summary>
            <param name="type">The type whose set of files is needed.  It cannot be null.</param>
            <returns>The collection of the source file names that define this type.  These names will be absolute paths.
            The returned collection may be empty if the type's pdb cannot be found.
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.GetFileForMethod(System.Reflection.MethodBase)">
            <summary>
            Returns the full path of the source file that defines the specified method or constructor
            </summary>
            <param name="methodBase">The input method or constructor.  It cannot be null.</param>
            <returns>The full path of the source file or null if it cannot be determined.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.GetFileForMethod(System.Diagnostics.SymbolStore.ISymbolReader,System.Reflection.MethodBase)">
            <summary>
            Returns the name of the file for the given method using the given symbol reader
            </summary>
            <param name="reader">The reader to use</param>
            <param name="methodBase">The method to lookup</param>
            <returns>The file containing the method or null.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.MethodBaseToKey(System.Reflection.MethodBase)">
            <summary>
            Converts a <see cref="T:System.Reflection.MethodBase"/> into a unique string key
            </summary>
            <remarks>
            We need this mechanism because our definition of identity only
            requires a match on name, declaring type, return type and parameters.
            So we construct an artificial key to confer this kind of unique identity.
            </remarks>
            <param name="methodBase">The method base to convert.</param>
            <returns>A unique key for the method base.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.GetMethodsForType(System.Type)">
            <summary>
            Returns the cached set of methods for the given type.
            </summary>
            <param name="type">The type whose methods are required</param>
            <returns>A dictionary keyed by MethodBase (as string) and containing the id's of the files</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.LoadAllMethodsForType(System.Type)">
            <summary>
            Loads into the cache all the methods for the given type
            </summary>
            <param name="type">The type to load</param>
            <returns>A dictionary keyed by MethodBase (as string) and containing the id's of the files</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.PdbSourceFileLocator.GetIdFromFile(System.String)">
            <summary>
            Given a file name, returns the associated internal ID
            </summary>
            <param name="file">The file name.  It cannot be null.</param>
            <returns>The ID.  If it did not exist already, one will be generated.</returns>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.Pdb.SymStore.HResult.E_FAIL">
            <summary>
            General failure
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolFormat">
            <summary>
            Enumeration of supported symbol formats
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolFormat.PDB">
            <summary>
            Normal PDB format - requires diasymreader.dll
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolAccess">
            <summary>
            This class includes methods for getting top-level access to symbol objects for reading and writing to PDB files
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolAccess.GetReaderForFile(System.String)">
            <summary>
            If you want a SymbolReader for a given exe, just use this function.
            </summary>
            <param name="pathModule">The path to the file</param>
            <returns>A symbol reader</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolAccess.GetReaderForFile(System.String,System.String)">
            <summary>
            If you know the name of the exe and a searchPath where the file may exist, use this one.
            </summary>
            <param name="pathModule">The module name to search</param>
            <param name="searchPath">The search path if known.  It may be null.</param>
            <returns>A new symbol reader for that module</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Pdb.SymStore.IMetadataImportPrivateComVisible">
            <summary>
            This interface is public to allow Marshal.GetComInterfaceForObject() within this
            implementation.  Do not use this interface.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.SymStore.IMetadataImportPrivateComVisible.Placeholder">
            <summary>
            Just need a single placeholder method so that it doesn't complain about an empty interface.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolBinder.#ctor(Microsoft.RiaServices.Tools.Pdb.SymStore.ISymUnmanagedBinder)">
            <summary>
            Create a SymbolBinder given the underling COM object for ISymUnmanagedBinder
            </summary>
            <param name="comBinderObject"></param>
            <remarks>Note that this could be protected, but C# doesn't have a way to express "internal AND 
            protected", just "internal OR protected"</remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Pdb.SymStore.SymbolBinder.GetReaderFromCOM(System.Object)">
            <summary>
            Get an ISymbolReader interface given a raw COM symbol reader object.
            </summary>
            <param name="reader">A COM object implementing ISymUnmanagedReader</param>
            <returns>The ISybmolReader interface wrapping the provided COM object</returns>
            <remarks>This method is on SymbolBinder because it's conceptually similar to the
            other methods for creating a reader.  It does not, however, actually need to use the underlying
            Binder, so it could be on SymReader instead (but we'd have to make it a public class instead of
            internal).</remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Pdb.SymStore.SymSearchPolicies">
            <summary>
            Available search policies for symbols
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ProjectFileReader">
            <summary>
            This utility class offers basic support for reading MSBuild
            project files.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.#ctor(Microsoft.RiaServices.Tools.ILogger,Microsoft.Build.Framework.IBuildEngine)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.RiaServices.Tools.ILogger"/> to use for warnings and errors.</param>
            <param name="buildEngine">Optional build engine.  If not null, it will be used for builds, otherwise a default build manager will be used.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.ConvertToRelativePath(System.String,System.String)">
            <summary>
            Returns the relative path of the given <paramref name="path"/>
            relative to <paramref name="projectPath"/>.
            </summary>
            <param name="path">The path we want made into a relative path.</param>
            <param name="projectPath">The project file we want it relative to.</param>
            <returns>The relative path if it is possible, else the unmodified <paramref name="path"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.ConvertToFullPath(System.String,System.String)">
            <summary>
            Returns the full path of the given <paramref name="path"/> relative to the
            given <paramref name="projectPath"/>.
            </summary>
            <param name="path">The path to convert (if not rooted).</param>
            <param name="projectPath">The path to use as the root.</param>
            <returns>The full path of the input <paramref name="path"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.LoadProject(System.String)">
            <summary>
            Retrieves a <see cref="T:Microsoft.Build.BuildEngine.Project"/> instance from the given project path.
            </summary>
            <param name="projectPath">Full path name to the project file.</param>
            <returns>The project instance or null if it does not exist</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.GetPropertyValue(System.String,System.String)">
            <summary>
            Retrieves the named property from the specified project
            </summary>
            <param name="projectPath">Full path to the project file.</param>
            <param name="propertyName">Name of the property to retrieve</param>
            <returns>The value of the property, or null if it does not exist.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.LoadProjectReferences(System.String)">
            <summary>
            Returns the list of all project references found in the given <paramref name="projectPath"/>
            </summary>
            <remarks>
            This method unconditionally opens an MSBuild object model on the given project
            to extract the set of project references.  It does not cache.  Use with care.
            </remarks>
            <param name="projectPath">Full path to the project to open.</param>
            <returns>The list of full project file names referred by by the given project.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectFileReader.LoadSourceFilesFromProject(System.String)">
            <summary>
            Retrieves the list of source file names from the specified project.
            </summary>
            <param name="projectPath">Full path to the project file.</param>
            <returns>A non-null (but possibly empty) list of full paths to files.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ProjectSourceFileCache">
            <summary>
            This class is responsible for managing the cache of
            source file names for all projects visible to a root project.
            </summary>
            <remarks>
            This class is used by the <see cref="T:Microsoft.RiaServices.Tools.CreateRiaClientFilesTask"/> to
            capture the list of project-to-project references from the root
            project and all the source files within those projects.  It
            has the ability to write this information to disk between builds to
            enhance performance of incremental builds.
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.#ctor(System.String,System.String,Microsoft.RiaServices.Tools.ILogger,Microsoft.Build.Framework.IBuildEngine)">
            <summary>
            Sole constructor
            </summary>
            <param name="rootProjectPath">Full path to the root project file.</param>
            <param name="historyFilePath">Full path to the file where we are allowed to write results between builds.</param>
            <param name="logger">The <see cref="T:Microsoft.RiaServices.Tools.ILogger"/> to use for warnings and errors.</param>
            <param name="buildEngine">Optional build engine.  If not null, it will be used for builds, otherwise a default build manager will be used.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.GetAllKnownProjects">
            <summary>
            Returns the list of all project file names, including the root project
            and all the projects to which is has project references.
            </summary>
            <remarks>
            This method will load the internal data structures the first time it is
            invoked.  Subsequent loads will reuse the cached data.
            </remarks>
            <returns>The collection of full project paths for the root project and all its project references.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.GetSourceFilesInProject(System.String)">
            <summary>
            Returns the list of  source file names from the given project, which is assumed to be
            one of the projects returned by <see cref="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.GetAllKnownProjects"/>
            </summary>
            <remarks>
            This method will load the internal data structures the first time it is
            invoked.  An unknown <paramref name="projectPath"/> will return <c>null</c>.
            </remarks>
            <param name="projectPath">The full path of a project file.</param>
            <returns>The collection of the full paths of the files.  This list may be empty.
            A <c>null</c> return indicates the given <paramref name="projectPath"/> is not known.
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.GetSourceFilesInAllProjects">
            <summary>
            Retrieves the set of all known source file names from the root
            project and all the projects it references.
            </summary>
            <returns>The collection of full paths to all known source files.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.SaveCacheToFile">
            <summary>
            Writes our internal knowledge of project references and their source file names
            to the breadcrumb file passed to the ctor.
            </summary>
            <returns><c>true</c> means the file was written, <c>false</c> if nothing was written.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.GetOrLoadSourceFilesByProject">
            <summary>
            Gets (or loads if this is the first call) the cache of all known project files
            and their associated source files.
            </summary>
            <returns>A dictionary keyed by full project name and containing all the source files for that project.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.LoadCacheFromFile">
            <summary>
            Loads the internal state from the breadcrumb file passed to the ctor.
            </summary>
            <remarks>
            If the root project has been modified since the breadcrumb file
            was written, the entire cache is considered invalid and <c>false</c> is returned.
            If any cached project has been touched since the cache was last written, just
            is portion of the cache will be reloaded from the project file.
            </remarks>
            <returns>A <c>true</c> means the cache was loaded from the breadcrumb file successfully.
            If we detect the cache is out of date or does not exist, a <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ProjectSourceFileCache.LoadSourceFilesFromProjects">
            <summary>
            Loads the internal state by opening the root project and all its referenced projects.
            </summary>
            <remarks>This method does not use the cache and is expensive, 
            requiring on the order of 1/2 second per project opened.
            </remarks>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ProjectSourceFileCache.IsFileCacheCurrent">
            <summary>
            Gets the value indicating whether the file on disk is
            current with respect to the in-memory contents
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ProjectSourceFileCache.ProjectFileReader">
            <summary>
            Gets an instance of a <see cref="P:Microsoft.RiaServices.Tools.ProjectSourceFileCache.ProjectFileReader"/>
            that can be used to read MSBuild project files.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ProjectSourceFileCache.SourceFilesByProject">
            <summary>
            Gets the cache of known source file names keyed by project name.
            </summary>
            <value>
            The value is a dictionary keyed by full path to the project file(s),
            containing the set of known source file names for that project.
            The first access of this property allocates the data structure
            but does not load it.  The keys are case-insensitive.
            </value>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.ProjectSourceFileCache.Item(System.String)">
            <summary>
            Indexer property that associates a set of source file names
            with a project via the <see cref="P:Microsoft.RiaServices.Tools.ProjectSourceFileCache.SourceFilesByProject"/> property.
            </summary>
            <value>
            The set of files to associate with this project.  <c>Null</c>
            is treated as a request to remove the associated project from
            the internal cache.  An empty list is permitted and adds an
            entry for the given project.  It means that we know that project
            has been analyzed and has no files, whereas a null means
            we don't know.
            </value>
            <param name="projectPath">Full path to the project file.</param>
            <returns>The set of source file names associated with the given <paramref name="projectPath"/>.
            A <c>null</c> indicates no files are associated with it.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.VirtualMethodInfo">
            <summary>
            Subclass of <see cref="T:System.Reflection.MethodInfo"/> that allows a hypothetical method
            to be described.
            </summary>
            <remarks>
            This type exists to allow clients to use the <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService"/>
            to ask questions about methods that may not exist within their own scope.
            This <see cref="T:System.Reflection.MethodInfo"/> is not invokable.  It is simply a container
            for describing a method's name, return type, and parameters.
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.VirtualMethodInfo.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Reflection.ParameterInfo},System.Type)">
            <summary>
            Creates a new instance
            </summary>
            <param name="name">The name of the method.  It cannot be null or empty.</param>
            <param name="returnType">The return type of the method.  It cannot be null.</param>
            <param name="parameters">The method parameters.  Null is acceptable to mean no parameters.</param>
            <param name="declaringType">The type to be considered that type that declared this method.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.VirtualParameterInfo">
            <summary>
            Subclass of <see cref="T:System.Reflection.ParameterInfo"/> to use in support of <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.VirtualMethodInfo"/>
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.VirtualParameterInfo.#ctor(System.String,System.Type)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name">The name of the parameter.  It cannot be null or empty.</param>
            <param name="parameterType">The type of the parameter.  It cannot be null.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.VirtualPropertyInfo">
            <summary>
            Subclass of <see cref="T:System.Reflection.PropertyInfo"/> that allows a hypothetical
            property to be described.
            </summary>
            <remarks>
            This type exists to allow clients to use the <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService"/>
            to ask questions about properties that may not exist within their own scope.
            This subclass cannot be used to get or set the property values.  It is only
            a container to describe a property.
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.VirtualPropertyInfo.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name">The property name.  It cannot be null or empty.</param>
            <param name="propertyType">The property type.  It cannot be null.</param>
            <param name="declaringType">The type to consider the declaring type.  It cannot be null.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.VirtualType">
            <summary>
            Subclass of <see cref="T:System.Type"/> used to create hypothetical types
            that may not yet exist.
            </summary>
            <remarks>
            Instances of this class are not fully-fledged types but are
            intended simply to let us describe a Type using conventions
            already known by Reflection clients.
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.VirtualType.#ctor(System.String,System.String,System.Reflection.Assembly,System.Type)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name">The simple type name for this virtual type.</param>
            <param name="namespaceName">The namespace for this virtual type</param>
            <param name="assembly">The assembly to which this virtual type belongs.</param>
            <param name="baseType">The base type to use for this virtual type.  It may be null.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.VirtualType.#ctor(System.Type)">
            <summary>
            Creates a new instance using the given <paramref name="sourceType"/>
            </summary>
            <param name="sourceType">The type to use as the source to copy.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService">
            <summary>
            General purpose interface to answer questions whether a type or a method
            is "shared" between multiple clients.
            </summary>
            <remarks>
            What it means to be "shared" depends on the implementation classes
            of this interface.  But in general, it means that the given type or
            method is visible to multiple clients, either through source level
            file sharing or through assembly references.
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService.IsTypeShared(System.Type)">
            <summary>
            Determines whether the specified type is shared.
            </summary>
            <remarks>
            A <c>null</c> return means that there is insufficient information
            to know.  For example, in the case of a PDB-based service, it indicates
            either that no PDB was found or that no information for the specified
            type could be found in the PDB.
            </remarks>
            <param name="type">The type to check.  It cannot be null.</param>
            <returns><c>true</c> if the type is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="type"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService.IsMethodShared(System.Reflection.MethodBase)">
            <summary>
            Determines whether the specified method or constructor is shared.
            </summary>
            <remarks>
            A <c>null</c> return means that there is insufficient information
            to know.  For example, in the case of a PDB-based service, it indicates
            either that no PDB was found or that no information for the specified
            method could be found in the PDB.  A method with no user-written code
            is an example of a method for which the PDB would have no information.
            </remarks>
            <param name="methodBase">The method or constructor to check.  It cannot be null.</param>
            <returns><c>true</c> if the method or constructor is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="methodBase"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService.IsPropertyShared(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the specified property is shared
            </summary>
            <remarks>
            A <c>null</c> return means that there is insufficient information
            to know.  For example, in the case of a PDB-based service, it indicates
            either that no PDB was found or that no information for the specified
            property could be found in the PDB.  An auto-generated property
            is an example of a property for which the PDB would have no information.
            </remarks>
            <param name="propertyInfo">An existing <see cref="T:System.Reflection.PropertyInfo"/> to check.  It cannot be null.</param>
            <returns><c>true</c> if the property is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="propertyinfo"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService.GetSharedType(System.Type)">
            <summary>
            Retrieves the shared type that corresponds to the given <paramref name="type"/>
            or null if there is no equivalent shared type.
            </summary>
            <param name="type">The source type to use to look for the shared type.  It cannot be null.</param>
            <returns>The equivalent shared type or null.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="type"/> is null.</exception>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies">
            <summary>
            Internal class to maintain a set of known assemblies
            and allow clients to ask whether types or methods are
            in that set.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Creates a new instance of this type.
            </summary>
            <param name="assemblyFileNames">The set of assemblies to use</param>
            <param name="assemblySearchPaths">Optional set of paths to search for referenced assemblies.</param>
            <param name="logger">Optional logger to use to report errors or warnings</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.IsTypeShared(System.Type)">
            <summary>
            Determines whether the given type has an equivalent type
            in the set of known assemblies.
            </summary>
            <remarks>A type is "equivalent" if it has the same namespace and type name.</remarks>
            <param name="type">The type to test.  It cannot be null.</param>
            <returns><c>true</c> if it is in the list of known assemblies</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.IsMethodShared(System.Reflection.MethodBase)">
            <summary>
            Determines whether the given method or constructor
            has an equivalent in the set of known assemblies.
            </summary>
            <remarks>A method or constructor is "equivalent" if its declaring type
            is equivalent and its return type and all parameter types also have
            equivalents.</remarks>
            <param name="methodBase">Method or constructor to test.  It cannot be null.</param>
            <returns><c>true</c> if it is in the list of known assemblies</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.GetSharedType(System.Type)">
            <summary>
            Locates and returns the type in the set of known assemblies
            that is equivalent to the given type.  The result is cached
            for higher performance on subsequent requests.
            </summary>
            <param name="type">The type to use for comparison</param>
            <returns>The equivalent type from the known assemblies, or null if not found</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.IsMethodShared(System.Reflection.MethodBase,System.Reflection.MethodBase[])">
            <summary>
            Helper method to compare a single method against a set of known methods
            </summary>
            <param name="methodBase">The method to test.  It cannot be null.</param>
            <param name="methods">The set of methods against which to test.</param>
            <returns><c>true</c> if <paramref name="methodBase"/> has an equivalent in <paramref name="methods"/></returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.EquivalentMsCorlibType(System.Type)">
            <summary>
            If the given type is defined in mscorlib, returns the type directly, otherwise null.
            </summary>
            <param name="type">The type whose equivalent we need</param>
            <returns>If the type lives in mscorlib, the input type, else null.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.IsSameType(System.Type,System.Type)">
            <summary>
            Helper to determine whether two types are equivalent.
            </summary>
            <param name="type1">The first type to compare.</param>
            <param name="type2">The second type</param>
            <returns><c>true</c> means the types are equivalent.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.FindSharedType(System.Type)">
            <summary>
            Locates and returns the type in the set of known assemblies
            that is equivalent to the given type.
            </summary>
            <param name="type">The type to use for comparison</param>
            <returns>The equivalent type from the known assemblies, or null if not found</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.LoadAssemblies">
            <summary>
            Loads all the named assemblies into a cache of known assemblies
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.SharedTypes.SharedAssemblies.Assemblies">
            <summary>
            Gets the set of loaded assemblies
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.SharedSourceFiles">
            <summary>
            Internal class to maintain a list of known source files
            and to answer questions whether the source files for
            specific types or methods are defined in those files.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedSourceFiles.#ctor(Microsoft.RiaServices.Tools.SharedTypes.ISourceFileLocationService,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance.
            </summary>
            <param name="sourceFileLocationService">Service to use to locate source files for types or methods.  
            It cannot be null.</param>
            <param name="sharedFiles">The set of files to consider "shared" in answering requests about types or methods.  
            It may be empty but it cannot be null.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedSourceFiles.IsTypeShared(System.Type)">
            <summary>
            Determines whether a type is defined in one of the known source files.
            </summary>
            <param name="type">The type to test.  It cannot be null.</param>
            <returns><c>true</c> if the type is defined in one of the known source files, 
            <c>false</c> if the type is defined in a files which are not shared.
            A <c>null</c> return indicates the files for this type could not be determined.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedSourceFiles.IsMethodShared(System.Reflection.MethodBase)">
            <summary>
            Determines whether the given method or constructor is defined
            in one of the known source files.
            </summary>
            <param name="methodBase">The method or constructor to test.  It cannot be null.</param>
            <returns><c>true</c> if the method is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedSourceFiles.IsFileShared(System.String)">
            <summary>
            Determines whether the given file is in our set of known source files
            </summary>
            <param name="file">The file to test.  Null or empty returns <c>null</c></param>
            <returns><c>true</c> if the file is in our known list of files</returns>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.SharedTypes.SharedSourceFiles.SourceFileLocationService">
            <summary>
            Gets the source file location service
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.SharedTypes.SharedTypeService">
            <summary>
            Implementation of <see cref="T:Microsoft.RiaServices.Tools.SharedTypes.ISharedTypeService"/> based on a set of
            known assemblies and a set of shared source files.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedTypeService.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Creates a new instance of this class
            </summary>
            <param name="sharedSourceFiles">The set of source files to consider when answering questions about shared types.
            The list may be empty but cannot be null.</param>
            <param name="sharedAssemblyFiles">The set of assemblies to consider when answering questions about shared types.
            The list may be empty but cannot be null.</param>
            <param name="assemblySearchPaths">Optional list of folders to search for assemblies referenced by <paramref name="sharedAssemblyFiles"/></param>
            <param name="logger">Optional logger to use to report errors or warnings.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedTypeService.IsTypeShared(System.Type)">
            <summary>
            Determines whether the given type is in the set of known source files or assemblies
            </summary>
            <param name="type">The type to consider.  It cannot be null.</param>
            <returns><c>true</c> if the type is in the set of known assemblies or files</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedTypeService.IsMethodShared(System.Reflection.MethodBase)">
            <summary>
            Determines whether the given method or constructor is in the set of known source files or assemblies
            </summary>
            <param name="methodBase">The method or constructor to consider.  It cannot be null.</param>
            <returns><c>true</c> if the method is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedTypeService.IsPropertyShared(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the specified property is shared
            </summary>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/> to check.  It cannot be null.</param>
            <returns><c>true</c> if the property is shared, <c>false</c> if it is not.
            A <c>null</c> return indicates there is insufficient information to know.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="propertyInfo"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.SharedTypes.SharedTypeService.GetSharedType(System.Type)">
            <summary>
            Retrieves the shared type that corresponds to the given <paramref name="type"/>
            or null if there is no equivalent shared type.
            </summary>
            <remarks>
            The returned type may be a reflection-only type or one the implementation has
            synthesized for this method.  It may be used to ask reflection questions, but
            there are no guarantees it can be instantiated.
            </remarks>
            <param name="type">The source type to use to look for the shared type.  It cannot be null.</param>
            <returns>The equivalent shared type or null.</returns>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="type"/> is null.</exception>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.TypeConstants">
            <summary>
            Since this code generator doesn't have assembly references to the server/client
            framework assemblies, we're using type name strings rather than type references
            during codegen.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.InvokeOperationTypeFullName">
            <summary>
            The 'System.Windows.Ria.InvokeOperation' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntityQueryTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntityQuery' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntityKeyTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntityKey' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntitySetTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntitySet' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.DomainContextTypeFullName">
            <summary>
            The 'System.Windows.Ria.DomainContext' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntityContainerTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntityContainer' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntitySetOperationsTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntitySetOperations' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.ChangeSetEntryTypeFullName">
            <summary>
            The 'System.Windows.Ria.ChangeSetEntry' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntityRefTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntityRef' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntityCollectionTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntityCollection' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.EntityTypeFullName">
            <summary>
            The 'System.Windows.Ria.EntityType' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.DefaultDomainClientTypeFullName">
            <summary>
            The default System.Windows.Ria.Services.WebDomainClient&lt;TContract&gt;' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.DomainClientTypeFullName">
            <summary>
            The 'System.Windows.Ria.Services.DomainClient' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.WebContextBaseName">
            <summary>
            The 'System.Windows.Ria.WebContextBase' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.ServiceQueryTypeFullName">
            <summary>
            The 'System.Windows.Ria.Services.ServiceQuery' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.DomainServiceFaultFullName">
            <summary>
            The 'System.Windows.Ria.Services.DomainServiceFault' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.QueryResultFullName">
            <summary>
            The 'System.Windows.Ria.Services.QueryResult' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.TypeConstants.IEnumerableFullName">
            <summary>
            The 'System.Collections.Generic.IEnumerable' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.DomainIdentifierAttributeBuilder">
            <summary>
            DomainIdentifierAttribute custom attribute builder.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainIdentifierAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Overrides the MapProperty method to simply to remove CodeProcessor from the list of properties to generate.
            </summary>
            <param name="propertyInfo">The getter property to consider</param>
            <param name="attribute">The current attribute instance we are considering</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
            <remarks>Specifically for the <see cref="T:System.Web.Ria.Data.DomainIdentifierAttribute"/> type, this method returns null if the property 
            name is "CodeProcessor".</remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CustomAttributeGenerator">
            <summary>
            Proxy generator for custom attributes
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.CustomAttributeGenerator.blockList">
            <summary>
            Block list for framework attributes we want to block from flowing.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.CustomAttributeGenerator._knownBuilderTypes">
            <summary>
            Known attribute builder types.
            </summary>
        </member>
        <member name="F:Microsoft.RiaServices.Tools.CustomAttributeGenerator._knownBuilders">
            <summary>
            Known attribute builder instances.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection,System.String)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="customCommentHeader">A custom comment header that will be displayed for any generated comment errors.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection,System.Boolean)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="forcePropagation">Indicates whether or not to force attribute propagation.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection,System.String,System.Boolean)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="customCommentHeader">A custom comment header that will be displayed for any generated comment errors.</param>
            <param name="forcePropagation">Indicates whether or not to force attribute propagation.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeCommentStatementCollection,System.String,System.Boolean)">
            <summary>
            Generates code for the given set of custom attributes
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="attributes">Collection of attributes for which to generate code</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="customCommentHeader">A custom comment header that will be displayed for any generated comment errors.</param>
            <param name="forcePropagation">Indicates whether or not to force attribute propagation.</param>
            <returns>The collection of generated attribute declarations corresponding to <paramref name="attributes"/></returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GetCustomAttributeBuilder(System.Type)">
            <summary>
            Retrieves the appropriate custom attribute builder for a given attribute instance
            </summary>
            <param name="attributeType">The attribute type.  It cannot be null.</param>
            <returns>The custom attribute builder for it.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.ConstructCodeAttributeFailureComments(Microsoft.RiaServices.Tools.ClientProxyGenerator,Microsoft.RiaServices.Tools.AttributeDeclaration)">
            <summary>
            Generate comments indicating attribute propagation failure.
            </summary>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="attributeDeclaration">The attribute declaration to generate as a comment.</param>
            <returns>A collection of comments.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.ValidateAttributeDeclarationRequirements(Microsoft.RiaServices.Tools.ClientProxyGenerator,Microsoft.RiaServices.Tools.AttributeDeclaration)">
            <summary>
            Verifies that a <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/>'s shared type requirements are met.
            </summary>
            <param name="proxyGenerator">The context for code generation</param>
            <param name="attributeDeclaration">The <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> to verify.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.GenerateCodeAttribute(Microsoft.RiaServices.Tools.ClientProxyGenerator,Microsoft.RiaServices.Tools.AttributeDeclaration)">
            <summary>
            Generates an attribute declaration string.  This is used in scenarios where an attribute declaration is needed
            in the form of a comment.  CodeDOM does not support generation of standalone attributes.
            </summary>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="attributeDeclaration">The <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> to represent.</param>
            <returns>An attribute declaration.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.ConvertValueToCode(System.Object,System.Boolean)">
            <summary>
            Converts a value to its source code representation.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="isCSharp">A booleaning indicating whether or not the target language is C#.</param>
            <returns>A string representing the <paramref name="value"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.CreateCodeAttributeDeclaration(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,Microsoft.RiaServices.Tools.AttributeDeclaration)">
            <summary>
            Creates a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> for the given <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/>.
            </summary>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="referencingType">The referencing type.</param>
            <param name="attributeDeclaration">The <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> to build.</param>
            <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclaration"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.IsAttributeBlocked(System.Type)">
            <summary>
            Returns a value expressing whether or not the attribute type is blocked from generation.
            </summary>
            <param name="attributeType">The attribute type to check.</param>
            <returns>True if the attribute should be blocked.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomAttributeGenerator.CreateCodeExpression(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Object)">
            <summary>
            Creates the CodeDom CodeExpression for the given value.  Returns null if unable to generate a CodeExpression.
            </summary>
            <remarks>This method exists solely to help generate code for all object types that can appear in an
            attribute declaration, such as typeof()</remarks>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="referencingType">The referencing type</param>
            <param name="value">The value.  Null is permitted.</param>
            <returns>The code expression</returns>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CustomAttributeGenerator.KnownBuilderTypes">
            <summary>
            Gets the dictionary mapping custom attribute types to their known custom attribute builder types
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.CustomAttributeGenerator.KnownBuilders">
            <summary>
            Gets the dictionary mapping custom attribute types to their builder instances
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CustomValidationCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder to deal with CustomValidationAttribute.
            </summary>
            <remarks>This class exists primarily to do type-checking during code generation.  A [CustomValidation]
            attribute is flagged as an error if the named type and validation methods cannot be located. If the 
            validator type is visible to the client the attribute will be propagated.
            </remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.ValidationCustomAttributeBuilder">
            <summary>
            Standard custom attribute builder for ValidationAttributes containing globalized resources.
            </summary>
            <remarks>
            This subclass of StandardCustomAttributeBuilder is aware of the subset of attributes
            that contain globalized resources and validates that they are correct prior to generating code
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ValidationCustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An attribute instance to create a <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.ValidationCustomAttributeBuilder.RegisterSharedResources(System.ComponentModel.DataAnnotations.ValidationAttribute,Microsoft.RiaServices.Tools.AttributeDeclaration)">
            <summary>
            Registers any resource type used by the given <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> that must be shared and 
            have a named resource property available.
            </summary>
            <param name="validationAttribute">The <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> instance to check.</param>
            <param name="attributeDeclaration">The <see cref="T:Microsoft.RiaServices.Tools.AttributeDeclaration"/> used to describe <paramref name="validationAttribute"/>.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator">
            <summary>
            Proxy generator for a DomainOperationEntry
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Web.DomainServices.DomainServiceDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator"/> class.
            </summary>
            <param name="clientProxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="proxyClass">The class into which to inject the generated code</param>
            <param name="domainServiceDescription">The description for the DomainService we're generating for</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for the domain operation entries
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator.CanGenerateDomainOperationEntry(System.Web.DomainServices.DomainOperationEntry)">
            <summary>
            Determines whether the specified <see cref="T:System.Web.DomainServices.DomainOperationEntry"/> can legally
            be generated.  Logs warnings or errors as appropriate.
            </summary>
            <param name="domainOperationEntry">The operation to generate.</param>
            <returns><c>false</c> means an error or warning has been logged and it should not be generated.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator.GenerateDomainOperationEntry(System.Web.DomainServices.DomainOperationEntry)">
            <summary>
            Generates a domain method on the domain service.
            </summary>
            <param name="domainMethod">The domain method to generate code for.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator.GenerateEntitySet(System.Type)">
            <summary>
            Generates the property getter for the given entity type from the given domain operation entry
            </summary>
            <param name="entityType">The type of the entity being exposed</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainOperationEntryProxyGenerator.GenerateEntityQueryMethod(System.Web.DomainServices.DomainOperationEntry)">
            <summary>
            Generates the query method for the specified query operation
            </summary>
            <param name="domainOperationEntry">DomainOperationEntry for which we are generating the query methods</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.DomainServiceCatalog">
            <summary>
            Represents a catalog of DomainServices.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.DomainServiceCatalog"/> class with the specified input and reference assemblies
            </summary>
            <param name="assemblies">input assemblies</param>
            <param name="references">reference assemblies</param>
            <param name="logger">logger for logging messages while processing</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="assemblies"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="references"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.#ctor(System.Type,Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.DomainServiceCatalog"/> class that permits code gen over a single domain service
            </summary>
            <param name="domainServiceType">a domain service type to generate code for</param>
            <param name="logger">logger for logging messages while processing</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="domainServiceType"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},Microsoft.RiaServices.Tools.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.DomainServiceCatalog"/> class that permits code gen over a list of domain services
            </summary>
            <param name="domainServiceTypes">list of domain service types to generate code for</param>
            <param name="logger">logger for logging messages while processing</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="domainServiceTypes"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.LogError(System.String)">
            <summary>
            Log an error message
            </summary>
            <param name="message">message to be logged</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.LogWarning(System.String)">
            <summary>
            Log a warning message
            </summary>
            <param name="message">message to be logged</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.AddDomainServiceDescriptions">
            <summary>
            Looks at all loaded assemblies and adds DomainServiceDescription for each DomainService found
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.GetProviderDescription(System.Type)">
            <summary>
            Call GetDescription for the specified domain service type.
            </summary>
            <param name="providerType">type of <see cref="T:System.Web.DomainServices.DomainService"/></param>
            <returns>the <see cref="T:System.Web.DomainServices.DomainServiceDescription"/> corresponding 
            to the specified provider type. Null is returned if an error has occurred.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.LoadAssembly(System.String)">
            <summary>
            Loads the specified Assembly and adds it to our list of loaded assemblies
            </summary>
            <param name="assemblyName">The name or path of the file that contains the manifest of the assembly.</param>
            <returns>The loaded assembly.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceCatalog.LoadAllAssemblies">
            <summary>
            Invoked once to force load all assemblies into an analysis unit
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.DomainServiceCatalog.DomainServiceDescriptions">
            <summary>
            Gets a collection of domain service descriptions
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator">
            <summary>
            Proxy generator for a DomainService
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.Web.DomainServices.DomainServiceDescription,System.Collections.Generic.IDictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="domainServiceDescription">The domain service description to use as source metadata</param>
            <param name="typeMapping">A dictionary of <see cref="T:System.Web.DomainServices.DomainService"/> and related entity types that maps to their corresponding client-side <see cref="T:System.CodeDom.CodeTypeReference"/> representations.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for a domain service.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.DomainContextTypeName(System.Web.DomainServices.DomainServiceDescription)">
            <summary>
            Returns the type name we will generate for the DomainContext for the given
            <paramref name="domainServiceDescription"/>
            </summary>
            <param name="domainServiceDescription">The domain service description from which we will generate the DomainContext.</param>
            <returns>The simple type name we will use for the DomainContext.  It will not include the namespace.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.GenerateConstructor(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.CodeDom.CodeParameterDeclarationExpression},System.Collections.Generic.IEnumerable{System.CodeDom.CodeExpression},System.Collections.Generic.IEnumerable{System.CodeDom.CodeCommentStatement},System.Boolean)">
            <summary>
            Generates and adds a constructor to an existing <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.
            </summary>
            <param name="proxyClass">The <see cref="T:System.CodeDom.CodeTypeDeclaration"/> to generate a constructor for.</param>
            <param name="parameters">A collection of <see cref="T:System.CodeDom.CodeParameterDeclarationExpression"/> values to pass to the constructor.</param>
            <param name="baseParameters">A collection of <see cref="T:System.CodeDom.CodeArgumentReferenceExpression"/> values to pass to the constructor base invocation.</param>
            <param name="comments">A collection of <see cref="T:System.CodeDom.CodeCommentStatement"/> values to add to the constructor.</param>
            <param name="callBaseCtr">Determines whether this ctr is to call the base ctr or one of the overloaded ctrs.</param>
            <returns>Returns the generated constructor.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.GenEntityContainer(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Type},System.Web.DomainServices.DomainServiceDescription)">
            <summary>
            Generates the "EntityContainer" for all the given entities
            </summary>
            <remarks>
            The EntityContainer is the logical store of the entity instances, and we have to generate
            code to instantiate entries in this store
            </remarks>
            <param name="proxyClass">Code into which to generate code</param>
            <param name="entityTypes">Set of all known entity types for which we need storage</param>
            <param name="domainServiceDescription">The DomainServiceDescription we're code genning for</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.GenEntityContainerInnerClass(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Type},System.Web.DomainServices.DomainServiceDescription)">
            <summary>
            Generate the EntityContainer inner class
            </summary>
            <param name="proxyClass">Class into which to generate code</param>
            <param name="entityTypes">All known entity types that will be stored in this EntityContainer</param>
            <param name="domainServiceDescription">The DomainServiceDescription we're code genning for</param>
            <returns>the generated EntityContainer inner class</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.DomainServiceProxyGenerator.TypeRequiresRegistration(System.Type)">
            <summary>
            Determines if a given <see cref="T:System.Type"/> should be registered with a <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to check.</param>
            <returns><c>true</c> if the <see cref="T:System.Type"/> should be registered, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.DisplayCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder that special-cases the [Display] attribute
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator">
            <summary>
            Proxy generator for custom methods.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Type,System.Collections.Generic.ICollection{System.Web.DomainServices.DomainServiceDescription},Microsoft.RiaServices.Tools.NotificationMethodGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="proxyClass">Code into which to generate code</param>
            <param name="entityType">The type of the entity.  Cannot be null.</param>
            <param name="domainServiceDescriptions">Collection of all <see cref="T:System.Web.DomainServices.DomainServiceDescription"/>s defined in this project</param>
            <param name="notificationMethodGen">Code generator for OnMethodName() methods</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator.Generate">
            <summary>
            This is the root method for generating invoke method and guard properties for custom methods
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator.GenerateCustomMethod(System.String,System.Web.DomainServices.DomainOperationEntry)">
            <summary>
            Generates an invoke method for the given custom method
            </summary>
            <param name="customMethodName">name of custom method</param>
            <param name="customMethod"><see cref="T:System.Web.DomainServices.DomainOperationEntry"/> of the custom method</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator.GenerateGuardProperty(System.String)">
            <summary>
            Generates a custom method guard property
            </summary>
            <param name="customMethodName">name of the custom method to generate guard property for</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.CustomMethodProxyGenerator.GenerateOnActionStateChanged(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This generates the update method for raising property notifications for the custom method guard properties
            </summary>
            <param name="customMethodNames">list of custom method names</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Naming">
            <summary>
            Contains code useful for creating and validating names. 
            Pluralization support, unique name creating, valid identifiers, etc.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.Naming.MakePluralName(System.String)">
            <summary>
            Changes the string in name to be plural. In place string edit.
            </summary>
            <param name="name">The name to pluralize.</param>
            <returns>A reference to name for convenience.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.InvokeOperationProxyGenerator">
            <summary>
            Proxy generator for a <see cref="T:System.Web.DomainServices.DomainOperationEntry"/> that represents an invoke operation.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.InvokeOperationProxyGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator,System.CodeDom.CodeTypeDeclaration,System.Web.DomainServices.DomainServiceDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.InvokeOperationProxyGenerator"/> class.
            </summary>
            <param name="clientProxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="proxyClass">The class into which to inject the generated code</param>
            <param name="domainServiceDescription">The description for the DomainService we're generating for</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.InvokeOperationProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for the domain operation entries
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.InvokeOperationProxyGenerator.GenerateInvokeOperation(System.Web.DomainServices.DomainOperationEntry,System.Boolean)">
            <summary>
            Generates an invoke operation.
            </summary>
            <param name="domainOperationEntry">The invoke operation.</param>
            <param name="generateCallback">bool flag indicating whether to generate callback and user state parameters.</param>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.RangeCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder that special-cases the [Range] attribute
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Analyzing_Project_Files">
            <summary>
              Looks up a localized string similar to Analyzing project &apos;{0}&apos; for shared source files..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Analyzing_Project_References">
            <summary>
              Looks up a localized string similar to Analyzing project &apos;{0}&apos; for project references..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Cannot_Find_Source_File">
            <summary>
              Looks up a localized string similar to Could not find this file to copy: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Assembly_Load_Error">
             <summary>
               Looks up a localized string similar to Assembly &apos;{0}&apos; could not be loaded and will be ignored.
            {1}.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Assembly_Load_Failure">
            <summary>
              Looks up a localized string similar to Assembly &apos;{0}&apos; or one of its referenced assemblies could not be loaded due to a &apos;{1}&apos; and was ignored during code generation..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Assembly_Load_Type_Error">
             <summary>
               Looks up a localized string similar to Failed to load types from assembly &apos;{0}&apos; so the assembly will be ignored.
            {1}.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_FailedToGenerate">
            <summary>
              Looks up a localized string similar to Unable to generate the following attribute due to the following error(s):.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_FailedToGenerate_ErrorTemplate">
            <summary>
              Looks up a localized string similar to - {0}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_Parameter_FailedToGenerate">
            <summary>
              Looks up a localized string similar to Unable to generate the following attribute(s) for parameter &apos;{0}&apos; due to the following error(s):.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresBuilder">
             <summary>
               Looks up a localized string similar to The attribute &apos;{0}&apos; was not generated because a suitable attribute generator was not found.
            
            Please ensure that the attribute type follows recommended .NET framework guidelines and meets the following requirements:
             - The attribute has one or more public constructors.
             - All public properties have public setter methods.
               OR
             - A public constructor exists that accepts parameters matching all public properties without public setter methods.  (Matching is performed by case-insensitive name and type.).
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresDataAnnotations">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; requires a reference to System.ComponentModel.DataAnnotations in the client project &apos;{1}&apos;. Skipping generation of attribute. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; is not visible in the client project &apos;{1}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Method">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references a method &apos;{1}&apos; on type &apos;{2}&apos; that is not accessible in the client project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_NoPDB">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; in assembly &apos;{1}&apos;
            was not generated in the proxy classes for client project &apos;{2}&apos;
            because there was insufficient information to determine whether it is visible to the client project.
            If this attribute type is intended to be used in shared code, avoid the use of
            automatic properties, provide at least a default constructor,
            and be sure a PDB is available for analysis..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Property">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references a property &apos;{1}&apos; on type &apos;{2}&apos; that is not accessible in the client project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Type">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references type &apos;{1}&apos; that is not accessible in the client project &apos;{2}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Type_NoPDB">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references type &apos;{1}&apos; from assembly &apos;{2}&apos; which is considered as not visible to the client project &apos;{3}&apos; either because no PDB file exists or because the type contains no user-defined code..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Cannot_Have_Include_And_Exclude">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; in type &apos;{1}&apos; is marked with both IncludeAttribute and ExcludeAttribute.  Ignoring IncludeAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Copying_File">
            <summary>
              Looks up a localized string similar to Copying file &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Could_Not_Find_Ctor">
            <summary>
              Looks up a localized string similar to The attribute type &apos;{0}&apos; does not contain a constructor with parameters for each of the values necessary to generate an equivalent client proxy..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Custom_Validation_Resource_Name">
            <summary>
              Looks up a localized string similar to The resource called &apos;{0}&apos; in resource type {1} must be public, static and must return a string..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Deleting_Orphan">
            <summary>
              Looks up a localized string similar to Deleting previously generated file &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Deleting_Orphan_Folder">
            <summary>
              Looks up a localized string similar to Deleting empty folder &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Domain_Op_Enum_Error">
            <summary>
              Looks up a localized string similar to DomainOperationEntry &apos;{0}&apos; in DomainService &apos;{1}&apos; will not be generated because it uses the enum type &apos;{2}&apos;.  {3}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_DomainService_CannotBeNested">
            <summary>
              Looks up a localized string similar to Cannot generate DomainService &apos;{0}&apos;. Nested DomainService types are not supported..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_ExceptionCaught">
            <summary>
              Looks up a localized string similar to CodeProcessor Type &apos;{0}&apos; defined in DomainIdentifier attribute on Type &apos;{1}&apos; threw an exception: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_InvalidConstructorSignature">
            <summary>
              Looks up a localized string similar to CodeProcessor Type &apos;{0}&apos; defined in DomainIdentifier attribute on Type &apos;{1}&apos; must have a constructor accepting one parameter of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_NotValidType">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; defined in DomainIdentifier attribute on Type &apos;{1}&apos; is not a valid CodeProcessor implementation..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_EmptyDomainService">
            <summary>
              Looks up a localized string similar to DomainService &apos;{0}&apos; does not contain any public domain operation entries..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_EntityTypesCannotBeShared">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; is exposed by multiple DomainService types. Entity types cannot be shared across DomainServices..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_EntityTypesCannotBeShared_Reference">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; already exists in &apos;{1}&apos;. Entity types cannot be defined in multiple assemblies..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Failed_Delete_Folder">
            <summary>
              Looks up a localized string similar to Could not delete folder &apos;{0}&apos;.  {1}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Failed_To_Load">
            <summary>
              Looks up a localized string similar to Failed to load one or more types from assembly &apos;{0}&apos;: {1}.  Continuing with the types that loaded successfully..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Input_Assembly_Not_Found">
            <summary>
              Looks up a localized string similar to Could not find necessary input file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_InvalidDomainServiceType">
            <summary>
              Looks up a localized string similar to Code cannot be generated for the DomainService &apos;{0}&apos; because it isn&apos;t marked with EnableClientAccessAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Load_Method_Summary">
            <summary>
              Looks up a localized string similar to Invokes the server-side method &apos;{0}&apos; and loads the result into &lt;see cref=&quot;{1}&quot;/&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Namespace_Required">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must appear inside a namespace..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_NamingCollision_MemberAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate DomainService &apos;{0}&apos; due to a naming conflict with an existing member.  DomainOperationEntry &apos;{1}&apos; conflicts with an auto-generated property with the same name.  Consider renaming..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_No_Input_Assemblies">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; project must be built before client proxy classes can be generated..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_OutputFiles_Are">
            <summary>
              Looks up a localized string similar to The client proxy task generated or is reusing existing copies of these files:{0}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Property_Enum_Error">
            <summary>
              Looks up a localized string similar to Property &apos;{0}.{1}&apos; will not be generated because it uses the enum type &apos;{2}&apos;.  {3}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_PropertyType_Not_Shared">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; in entity type &apos;{1}&apos; cannot be generated because its type &apos;{2}&apos; is not visible in the client project &apos;{3}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Query_Method_Summary">
            <summary>
              Looks up a localized string similar to Returns an EntityQuery for query operation &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Resource_Type_Not_Shared">
            <summary>
              Looks up a localized string similar to The resource type &apos;{0}&apos; used in &apos;{1}&apos; must be marked a SharedAttribute and be public..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Skipping_CodeGen">
            <summary>
              Looks up a localized string similar to Skipping code generation because existing file &apos;{0}&apos; is current..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_Skipping_Copy">
            <summary>
              Looks up a localized string similar to Skipping copy because existing file &apos;{0}&apos; is current..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_ValidationAttribute_Requires_ResourceType_And_Name">
            <summary>
              Looks up a localized string similar to The validation attribute &apos;{0}&apos; declared ErrorMessageResourceType=&apos;{1}&apos; and ErrorMessageResourceName=&apos;{2}&apos;.  It must specify both or neither..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ClientCodeGen_ValidationAttribute_ResourcePropertyNotFound">
            <summary>
              Looks up a localized string similar to The validation attribute &apos;{0}&apos; declared ErrorMessageResourceName=&apos;{1}&apos; which was not found on declared ErrorMessageResourceType &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CodeGen_Execution_Time">
            <summary>
              Looks up a localized string similar to RIA client proxy class generation finished in {0} seconds..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CodeGen_Generating_DomainService">
            <summary>
              Looks up a localized string similar to Generating proxy classes for the DomainService &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CodeGen_Generating_Proxies">
            <summary>
              Looks up a localized string similar to RIA client proxy class generation starting for project &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CodeGen_Generating_WebContext">
            <summary>
              Looks up a localized string similar to Generating WebContext class..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CodeGen_No_Pdb">
             <summary>
               Looks up a localized string similar to Shared file analysis cannot be done on assembly &apos;{0}&apos; because it has no corresponding PDB file.
            Change its project file to set DebugType to &apos;full&apos; or &apos;pdbonly&apos; if you intend to share code..
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CodeGen_Shared_Files">
            <summary>
              Looks up a localized string similar to Files visible to both the client and the server are:{0}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.CommentOnCreated">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            This method is invoked from the constructor once initialization is complete and
            can be used for further object setup.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Deleting_Empty_File">
            <summary>
              Looks up a localized string similar to Deleting file {0} because no client proxy classes have been generated..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Entity_Has_No_Key_Properties">
            <summary>
              Looks up a localized string similar to The entity &apos;{0}&apos; does not have a key defined. Entities exposed by DomainService operations must have at least one property marked with the KeyAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_ConstructorComments_Param_DomainClient">
            <summary>
              Looks up a localized string similar to The DomainClient instance the DomainContext should use..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_ConstructorComments_Param_ServiceUri">
            <summary>
              Looks up a localized string similar to The {0} data service URI..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_Default">
            <summary>
              Looks up a localized string similar to Default constructor..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_DomainClientAccumulating">
            <summary>
              Looks up a localized string similar to Constructor used to specify a DomainClient instance..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_ServiceUri">
            <summary>
              Looks up a localized string similar to Constructor used to specify a data service URI..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_DuplicateCustomMethodName">
            <summary>
              Looks up a localized string similar to The same custom method name &apos;{0}&apos; associated with entity type &apos;{1}&apos; has been defined multiple times in the same domain service..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_EntityKey_KeyTypeNotSupported">
            <summary>
              Looks up a localized string similar to Property &apos;{0}.{1}&apos; is marked as a key property and is of Type &apos;{2}&apos;, which is not a supported key member Type..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_EntityKey_PropertyTypeNotSupported">
            <summary>
              Looks up a localized string similar to The property &apos;{0}.{1}&apos; is marked as a key property, but it uses type &apos;{2}&apos; which is not one of the supported serializable types..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_Generating_GuardProperty">
            <summary>
              Looks up a localized string similar to Generating custom method guard property &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_Generating_GuardUpdateMethod">
            <summary>
              Looks up a localized string similar to Generating update method for guard properties....
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_Generating_InvokeMethod">
            <summary>
              Looks up a localized string similar to Generating domain invoke method &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_NamingCollision_EntityCustomMethodNameAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate Entity &apos;{0}&apos; due to a naming conflict with an existing member.  Custom method &apos;{1}&apos; conflicts with a field with the same name.  Consider renaming..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.EntityCodeGen_NamingCollision_MemberAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate &apos;{0}&apos; entity: the type &apos;{1}&apos; already contains a definition for &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Enum_Type_Cannot_Gen_System">
            <summary>
              Looks up a localized string similar to The enum type is not visible to the client and belongs to the System namespace.  Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Enum_Type_Must_Be_Public">
            <summary>
              Looks up a localized string similar to The enum type must be public and cannot be nested..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Create_Folder">
            <summary>
              Looks up a localized string similar to Failed to create folder &apos;{0}&apos;.{1}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Delete_File">
            <summary>
              Looks up a localized string similar to Failed to delete file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Delete_File_Error">
            <summary>
              Looks up a localized string similar to Could not delete file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Modify_ReadOnly">
            <summary>
              Looks up a localized string similar to Failed to modify the read-only attribute of file &apos;{0}&apos;.{1}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Open_Project">
            <summary>
              Looks up a localized string similar to An error was encountered attempting to open project &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Read_File_From_VS">
            <summary>
              Looks up a localized string similar to Failed to read the contents of &apos;{0}&apos; from Visual Studio..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Write_File">
            <summary>
              Looks up a localized string similar to Failed to write file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Failed_To_Write_File_To_VS">
            <summary>
              Looks up a localized string similar to Failed to write the generated contents of &apos;{0}&apos; to Visual Studio..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.File_Is_Open_In_VS">
            <summary>
              Looks up a localized string similar to Detected Visual Studio has opened &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Null_Language_Property">
            <summary>
              Looks up a localized string similar to The Language property cannot be null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Null_Logger_Property">
            <summary>
              Looks up a localized string similar to The Logger property cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Project_Does_Not_Exist">
            <summary>
              Looks up a localized string similar to The project &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Project_References_Found">
            <summary>
              Looks up a localized string similar to The project &apos;{0}&apos; contains project references to:.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.ProjectPath_Argument_Required">
            <summary>
              Looks up a localized string similar to ProjectPath property is required when relative paths are used..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Reading_File_From_Disk">
            <summary>
              Looks up a localized string similar to Reading contents of &apos;{0}&apos; from disk..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Reading_File_From_VS">
            <summary>
              Looks up a localized string similar to Reading contents of &apos;{0}&apos; from Visual Studio..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Region_ExtensibilityMethodDefinitions">
            <summary>
              Looks up a localized string similar to Extensibility Method Definitions.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.RIA_Link_Present">
            <summary>
              Looks up a localized string similar to A RIA link exists between project &apos;{0}&apos; and project &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.RIA_Link_Prevents_Copy">
            <summary>
              Looks up a localized string similar to Shared files will not be copied from &apos;{0}&apos; due to an existing RIA link from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Shared_DomainContext_Skipped">
            <summary>
              Looks up a localized string similar to Skipping proxy class generation for &apos;{0}&apos; because a DomainContext for it already exists in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Skipping_CodeGen">
            <summary>
              Looks up a localized string similar to The server assembly was not available for analysis.  Client proxy generation has been skipped..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Type_Must_Be_Attribute">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not derived from Attribute..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Unspecified_Resource_Element">
            <summary>
              Looks up a localized string similar to &lt;unspecified&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.VS_Host_Detected">
            <summary>
              Looks up a localized string similar to Detected Visual Studio host.  IsRealBuild = &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.VS_Host_Object_Failed_FileTime">
            <summary>
              Looks up a localized string similar to VS host object failed to obtain file modification time.  Using file system time..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.WebContext_CommentClass">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Context for the RIA application.
            &lt;/summary&gt;
            &lt;remarks&gt;
            This context extends the base to make application services and types available
            for consumption from code and xaml.
            &lt;/remarks&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.WebContext_CommentConstructor">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Initializes a new instance of the WebContext class.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.WebContext_CommentCurrent">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Gets the context that is registered as a lifetime object with the current application.
            &lt;/summary&gt;
            &lt;exception cref=&quot;InvalidOperationException&quot;&gt; is thrown if there is no current application,
            no contexts have been added, or more than one context has been added.
            &lt;/exception&gt;
            &lt;seealso cref=&quot;Application.ApplicationLifetimeObjects&quot;/&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.WebContext_CommentUser">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Gets a user representing the authenticated identity.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.WebContext_ManyAuthServices">
            <summary>
              Looks up a localized string similar to More than one AuthenticationService was found so none will be used as the default in WebContext.\n{0}.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Writing_File_To_Disk">
            <summary>
              Looks up a localized string similar to Writing content of &apos;{0}&apos; to disk..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Writing_File_To_VS">
            <summary>
              Looks up a localized string similar to Writing contents of &apos;{0}&apos; to Visual Studio..
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.Resource.Writing_Generated_Code">
            <summary>
              Looks up a localized string similar to Writing generated client proxy classes to &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:System.Web.DomainServices.TypeDescriptorExtensions">
            <summary>
            Extension methods for TypeDescriptors
            </summary>
        </member>
        <member name="M:System.Web.DomainServices.TypeDescriptorExtensions.ExplicitAttributes(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Extension method to extract only the explicitly specified attributes from a <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            </summary>
            <remarks>
            Normal TypeDescriptor semantics are to inherit the attributes of a property's type.  This method
            exists to suppress those inherited attributes.
            </remarks>
            <param name="propertyDescriptor">The property descriptor whose attributes are needed.</param>
            <returns>A new <see cref="T:System.ComponentModel.AttributeCollection"/> stripped of any attributes from the property's type.</returns>
        </member>
        <member name="M:System.Web.DomainServices.TypeDescriptorExtensions.ContainsAttributeType``1(System.ComponentModel.AttributeCollection)">
            <summary>
            Checks to see if an attribute collection contains any attributes of the provided type.
            </summary>
            <typeparam name="TAttribute">The attribute type to check for</typeparam>
            <param name="attributes">The attribute collection to inspect</param>
            <returns><c>True</c> if an attribute of the provided type is contained in the attribute collection.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.UIHintCustomAttributeBuilder">
            <summary>
            Class to generate code for the [UIHint] attribute.
            </summary>
            <remarks>
            Specialization is required for the non-standard way this attribute allows a variable number
            of parameters and composes them into a dictionary of name value pairs.
            </remarks>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy">
            <summary>
            Utility class providing proxy types that expose Microsoft.VisualStudio.XXX types via reflection.
            Some Microsoft.RiaServices.Tools build task classes take advantage of VS services when hosted 
            in VS but this project can be built outside VS so it cannot have static references to VS assemblies.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.IProxy">
            <summary>
            Interface returning an object created from a Microsoft.VisualStudio.XXX type.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.VSConstants">
            <summary>
            Proxy for VSConstants type.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.VsMSBuildTaskFileManager">
            <summary>
            Proxy for IVsMSBuildTaskFileManager type.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.VsMSBuildTaskFileManager.#ctor(System.Object)">
            <summary>
            Private ctr. This class cannot be constructed from a null task manager object.
            </summary>
            <param name="taskManager">The task manager object.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.VsMSBuildTaskFileManager.GetVsMSBuildTaskFileManager(System.Object)">
            <summary>
            Public instance construction method. When running outside VS context (plain msbuild), 
            the taskManager param will be null.
            </summary>
            <param name="taskManager">The task manager object.</param>
            <returns>Returns the MSBuild task file mananger instance.</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.FILETIME">
            <summary>
            Proxy for VS FILETIME structure.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.ErrorHandler">
            <summary>
            Proxy for the VS ErrorHanlder class.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.VSAssemblies">
            <summary>
            Utility class to get Visual Studio loaded assemblies (if available).
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.VSAssemblies.GetAssembly(System.String)">
            <summary>
            Gets the assembly with the given name.
            </summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>Returns the assembly.</returns>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.VSReflectionProxy.VSAssemblies.ShellInterop9">
            <summary>
            Gets the ShellInterop9 assembly.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.VSReflectionProxy.VSAssemblies.ShellOleInterop">
            <summary>
            Gets the ShellOleInterop assembly.
            </summary>
        </member>
        <member name="P:Microsoft.RiaServices.Tools.VSReflectionProxy.VSAssemblies.Shell">
            <summary>
            Gets the shell assembly.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.ReflectionTypeHelper">
            <summary>
            Helper class to interact with types via reflection.
            </summary>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.ReflectionTypeHelper.GetType(System.String,System.Reflection.Assembly)">
            <summary>
            Returns a Type instance from the specified assembly based on the type name.
            </summary>
            <param name="typeName">The name of the type to get.</param>
            <param name="assembly">The assembly containing the type.</param>
            <returns>Returns the type.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.ReflectionTypeHelper.GetField(System.Object,System.String)">
            <summary>
            Gets the field with the given name, on the given instance.
            </summary>
            <param name="instance">The instance containing the field.</param>
            <param name="field">The name of the field.</param>
            <returns>Returns the field.</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.ReflectionTypeHelper.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            Invokes a method on the specified instance param.
            </summary>
            <param name="instance">An instance of the type the method belongs to. If of type Type, the method is assumed to be static.</param>
            <param name="methodName">The name of the method to invoke</param>
            <param name="args">The method args</param>
            <returns>The method return value</returns>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.VSReflectionProxy.ReflectionTypeHelper.InvokeMethod(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Invokes a method on the specified instance param.
            </summary>
            <param name="instance">An instance of the type the method belongs to. If of type Type, the method is assumed to be static.</param>
            <param name="methodInfo">a MethodInfo structure for the method to invoke</param>
            <param name="args">The method args</param>
            <returns>The method return value</returns>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.VSReflectionProxy.ProxyGenericList">
            <summary>
            This class represents a generic list of types specified at runtime.
            </summary>
        </member>
        <member name="T:Microsoft.RiaServices.Tools.WebContextGenerator">
            <summary>
            Generator for the <c>WebContext</c> application class.
            </summary>
            <remarks>
            The <c>WebContext</c> class will only be generated for Application assemblies.
            </remarks>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.WebContextGenerator.#ctor(Microsoft.RiaServices.Tools.ClientProxyGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.RiaServices.Tools.WebContextGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.</param>
        </member>
        <member name="M:Microsoft.RiaServices.Tools.WebContextGenerator.Generate">
            <summary>
            Generates the WebContext class
            </summary>
        </member>
    </members>
</doc>
