<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Moses.Web</name>
    </assembly>
    <members>
        <member name="M:Moses.Web.HttpHelpers.ResolveUrl(System.String)">
            <summary>
            Returns a site relative HTTP path from a partial path starting out with a ~.
            Same syntax that ASP.Net internally supports but this method can be used
            outside of the Page framework.
            
            Works like Control.ResolveUrl including support for ~ syntax
            but returns an absolute URL.
            </summary>
            <param name="originalUrl">Any Url including those starting with ~</param>
            <returns>relative url</returns>
        </member>
        <member name="M:Moses.Web.HttpHelpers.ResolveServerUrl(System.String,System.Boolean)">
            <summary>
            This method returns a fully qualified absolute server Url which includes
            the protocol, server, port in addition to the server relative Url.
            
            Works like Control.ResolveUrl including support for ~ syntax
            but returns an absolute URL.
            </summary>
            <param name="ServerUrl">Any Url, either App relative or fully qualified</param>
            <param name="forceHttps">if true forces the url to use https</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.HttpHelpers.ResolveServerUrl(System.String)">
            <summary>
            This method returns a fully qualified absolute server Url which includes
            the protocol, server, port in addition to the server relative Url.
            
            It work like Page.ResolveUrl, but adds these to the beginning.
            This method is useful for generating Urls for AJAX methods
            </summary>
            <param name="ServerUrl">Any Url, either App relative or fully qualified</param>
            <returns></returns>
        </member>
        <member name="T:Moses.Web.Mvc.Patterns.IChildEntity`3">
            <summary>
            Interface for define a Child Entity
            </summary>
            <typeparam name="K">Type of the identifier</typeparam>
            <typeparam name="TEntityParent">Parent Entity Type</typeparam>
            <typeparam name="J">Parent Entity Id Type</typeparam>
        </member>
        <member name="T:Moses.Web.Mvc.Patterns.IGridUnitOfWork`3">
            <summary>
            Grid Unit of Work ready-to-use interface
            </summary>
            <typeparam name="TEntity">Entity of the UnitOfWork</typeparam>
            <typeparam name="TType">Type of the Entity Identifier</typeparam>
        </member>
        <member name="T:Moses.Web.Mvc.Patterns.IChildGridUnitOfWork`5">
            <summary>
            Federated Grid Unit of Work ready-to-use interface
            </summary>
            <typeparam name="TEntityMaster">Entity of the UnitOfWork</typeparam>
            <typeparam name="KMaster">Type of the Entity Identifier</typeparam>
        </member>
        <member name="M:Moses.Web.Mvc.Patterns.UnitOfWork`3.InitializeRepository">
            <summary>
            Initializes the repository 
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Moses.Web.Mvc.Patterns.UnitOfWork`3.Table">
            <summary>
            Data Source for UnitOfWork
            </summary>
        </member>
        <member name="M:Moses.Web.Mvc.Patterns.UnitOfWork`3.InitializeEntity">
            <summary>
            Initializes Entity Scope. 
            </summary>
            <remarks>
            Set default Entity values on basic abstract implementation
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Moses.Web.Mvc.Patterns.UnitOfWork`2">
            <summary>
            
            </summary>
            <typeparam name="TEntity">Entity for the unit of work to Handle</typeparam>
        </member>
        <member name="T:Moses.Web.Mvc.Patterns.MosesRequestType">
            <summary>
            Representa o Tipo de Requisição no padrão do Moses
            </summary>
        </member>
        <member name="M:Moses.Web.Mvc.Patterns.WebViewPageHelper.Route(System.Web.Mvc.UrlHelper,System.String,System.String,System.Object)">
            <summary>
            Defines a type of action specific to work with module trespassing
            </summary>
            <param name="container"></param>
            <param name="ation"></param>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Mvc.Patterns.WebViewPageHelper.FreshRoute(System.Web.Mvc.UrlHelper,System.String,System.String,System.Object)">
            <summary>
            Executes a Fresh Route, reloading the AppContainer
            </summary>
            <param name="container"></param>
            <param name="action"></param>
            <param name="controller"></param>
            <param name="routeValues"></param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Mvc.JsonNetResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            este eh um x
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Moses.Web.Mvc.Html.MosesRouteValuesHelpers">
            <summary>
            Classe RouteValuesHelpers
            </summary>
            <remarks>
            Enxerto de código estático vindo direto dos fontes do MVC. Necessário para o GenerateUrl
            </remarks>
        </member>
        <member name="M:Moses.Web.PostData.GetPostData">
            <summary>
            Returns the parameters array formatted for multi-part/form data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.CloudConvert.#ctor(System.String)">
            <param name="apikey">The API key which can be found here: https://cloudconvert.org/user/profile</param>
        </member>
        <member name="M:Moses.Web.CloudConvert.GetProcessURL(System.String,System.String)">
            <summary>
            Creates a new Process ID.
            </summary>
            <param name="inputFormat">Current format of the file.</param>
            <param name="outputFormat">Output format, to which the file should be converted.</param>
            <returns>The URL to upload a file, check the status of a conversion and download the converted file.</returns>
        </member>
        <member name="M:Moses.Web.CloudConvert.UploadFile(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Uploads a file for conversion.
            </summary>
            <param name="processUrl">The URL to upload a file which you get using the GetProcessURL method.</param>
            <param name="filePath">Path to the file which will be converted.</param>
            <param name="outputFormat">Output format, to which the file should be converted.</param>
            <param name="email">E-mail address which is notified after the conversion is finished.</param>
            <param name="options">Conversion type specific options.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.CloudConvert.GetStatus(System.String)">
            <summary>
            Gets the status of a conversion.
            </summary>
            <param name="processUrl">The URL to upload a file which you get using the GetProcessURL method.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.CloudConvert.CancelConversion(System.String)">
            <summary>
            Cancels a running conversion
            </summary>
            <param name="processUrl">The URL to upload a file which you get using the GetProcessURL method.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.CloudConvert.DeleteConversion(System.String)">
            <summary>
            Deletes a finished or an aborted conversion (This is irreversible).
            </summary>
            <param name="processUrl">The URL to upload a file which you get using the GetProcessURL method.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.CloudConvert.ListProcesses">
            <summary>
            Lists all the running conversions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Moses.Web.ConversionStatus">
            <summary>
            The class for deserializing the conversion status.
            </summary>
        </member>
        <member name="T:Moses.Web.ListRC">
            <summary>
            The class for deserializing the list of running processes.
            </summary>
        </member>
        <member name="M:Moses.Web.Extensions.ExcludeEntityKeyHelper.FilterEntities(System.Collections.Generic.IList{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>
            Exclui da lista todas as variáveis que representam entidades associadas
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Extensions.JqGridDataHelper.ToJqGridData``1(System.Linq.IQueryable{``0},System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object)">
            <summary>
            Converts a queryable expression into a format suitable for the JqGrid component, when
            serialized to JSON. Use this method when returning data that the JqGrid component will
            fetch via AJAX. Take the result of this method, and then serialize to JSON. This method
            will also apply paging to the data.
            </summary>
            <typeparam name="T">The type of the element in baseList. Note that this type should be
            an anonymous type or a simple, named type with no possibility of a cycle in the object
            graph. The default JSON serializer will throw an exception if the object graph it is
            serializing contains cycles.</typeparam>
            <param name="baseList">The list of records to display in the grid.</param>
            <param name="currentPage">A 1-based index indicating which page the grid is about to display.</param>
            <param name="rowsPerPage">The maximum number of rows which the grid can display at the moment.</param>
            <param name="orderBy">A string expression containing a column name and an optional ASC or
            DESC. You can, separate multiple column names as with SQL.</param>
            <param name="searchQuery">The value which the user typed into the search box, if any. Can be
            null/empty.</param>
            <param name="searchColumns">An array of strings containing the names of properties in the
            element type of baseList which should be considered when searching the data for searchQuery.</param>
            <param name="userData">Arbitrary data to be returned to the grid along with the row data. Leave
            null if not using. Must be serializable to JSON!</param>
            <returns>A structure containing all of the fields required by the JqGrid. You can then call
            a JSON serializer, passing this result.</returns>
        </member>
        <member name="P:Moses.Web.Extensions.JqGridData.Total">
            <summary>
            The number of pages which should be displayed in the paging controls at the bottom of the grid.
            </summary>
        </member>
        <member name="P:Moses.Web.Extensions.JqGridData.Page">
            <summary>
            The current page number which should be highlighted in the paging controls at the bottom of the grid.
            </summary>
        </member>
        <member name="P:Moses.Web.Extensions.JqGridData.Records">
            <summary>
            The total number of records in the entire data set, not just the portion returned in Rows.
            </summary>
        </member>
        <member name="P:Moses.Web.Extensions.JqGridData.Rows">
            <summary>
            The data that will actually be displayed in the grid.
            </summary>
        </member>
        <member name="P:Moses.Web.Extensions.JqGridData.UserData">
            <summary>
            Arbitrary data to be returned to the grid along with the row data. Leave null if not using. Must be serializable to JSON!
            </summary>
        </member>
        <member name="M:Moses.Web.Management.MosesWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)">
            <summary>
            Escreve no XML o evento disparado pela aplicação
            </summary>
            <param name="raisedEvent"></param>
        </member>
        <member name="T:Moses.Web.Inspector">
            <summary>
            Entidade que inspeciona o acesso dos usuários a páginas e loga no banco de dados para realização de estatísticas
            </summary>
        </member>
        <member name="T:Moses.Web.Controls.FontWarpFactor">
            <summary>
            Amount of random font warping to apply to rendered text
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.FontWarpFactor.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.FontWarpFactor.Low">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.FontWarpFactor.Medium">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.FontWarpFactor.High">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.FontWarpFactor.Extreme">
            <summary>
            
            </summary>
        </member>
        <member name="T:Moses.Web.Controls.BackgroundNoiseLevel">
            <summary>
            Amount of background noise to add to rendered image
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.BackgroundNoiseLevel.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.BackgroundNoiseLevel.Low">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.BackgroundNoiseLevel.Medium">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.BackgroundNoiseLevel.High">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.BackgroundNoiseLevel.Extreme">
            <summary>
            
            </summary>
        </member>
        <member name="T:Moses.Web.Controls.LineNoiseLevel">
            <summary>
            Amount of curved line noise to add to rendered image
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.LineNoiseLevel.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.LineNoiseLevel.Low">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.LineNoiseLevel.Medium">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.LineNoiseLevel.High">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.LineNoiseLevel.Extreme">
            <summary>
            
            </summary>
        </member>
        <member name="T:Moses.Web.Controls.CaptchaImage">
            <summary>
            CAPTCHA Image
            </summary>
            <seealso href="http://www.codinghorror.com">Original By Jeff Atwood</seealso>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.GetCachedCaptcha(System.String)">
            <summary>
            Gets the cached captcha.
            </summary>
            <param name="guid">The GUID.</param>
            <returns></returns>
        </member>
        <member name="F:Moses.Web.Controls.CaptchaImage.RandomFontFamily">
            <summary>
            
            </summary>
        </member>
        <member name="F:Moses.Web.Controls.CaptchaImage.RandomColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.TextChars">
            <summary>
            Gets or sets a string of available text characters for the generator to use.
            </summary>
            <value>The text chars.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.TextLength">
            <summary>
            Gets or sets the length of the text.
            </summary>
            <value>The length of the text.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.FontWarp">
            <summary>
            Gets and sets amount of random warping to apply to the <see cref="T:Moses.Web.Controls.CaptchaImage"/> instance.
            </summary>
            <value>The font warp.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.BackgroundNoise">
            <summary>
            Gets and sets amount of background noise to apply to the <see cref="T:Moses.Web.Controls.CaptchaImage"/> instance.
            </summary>
            <value>The background noise.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.LineNoise">
            <summary>
            Gets or sets amount of line noise to apply to the <see cref="T:Moses.Web.Controls.CaptchaImage"/> instance.
            </summary>
            <value>The line noise.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.CacheTimeOut">
            <summary>
            Gets or sets the cache time out.
            </summary>
            <value>The cache time out.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.UniqueId">
            <summary>
            Returns a GUID that uniquely identifies this Captcha
            </summary>
            <value>The unique id.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.RenderedAt">
            <summary>
            Returns the date and time this image was last rendered
            </summary>
            <value>The rendered at.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.Text">
            <summary>
            Gets the randomly generated Captcha text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.Width">
            <summary>
            Width of Captcha image to generate, in pixels
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Moses.Web.Controls.CaptchaImage.Height">
            <summary>
            Height of Captcha image to generate, in pixels
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.#cctor">
            <summary>
            Initializes the <see cref="T:Moses.Web.Controls.CaptchaImage"/> class.
            </summary>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Moses.Web.Controls.CaptchaImage"/> class.
            </summary>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.RenderImage">
            <summary>
            Forces a new Captcha image to be generated using current property value settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.GetRandomFontFamily">
            <summary>
            Returns a random font family from the font whitelist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.GenerateRandomText">
            <summary>
            generate random text for the CAPTCHA
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.RandomPoint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a random point within the specified x and y ranges
            </summary>
            <param name="xmin">The xmin.</param>
            <param name="xmax">The xmax.</param>
            <param name="ymin">The ymin.</param>
            <param name="ymax">The ymax.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.GetRandomColor">
            <summary>
            Randoms the color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.RandomPoint(System.Drawing.Rectangle)">
            <summary>
            Returns a random point within the specified rectangle
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.TextPath(System.String,System.Drawing.Font,System.Drawing.Rectangle)">
            <summary>
            Returns a GraphicsPath containing the specified string and font
            </summary>
            <param name="s">The s.</param>
            <param name="f">The f.</param>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.GetFont">
            <summary>
            Returns the CAPTCHA font in an appropriate size
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.GenerateImagePrivate">
            <summary>
            Renders the CAPTCHA image
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.WarpText(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle)">
            <summary>
            Warp the provided text GraphicsPath by a variable amount
            </summary>
            <param name="textPath">The text path.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.AddNoise(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Add a variable level of graphic noise to the image
            </summary>
            <param name="graphics1">The graphics1.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Moses.Web.Controls.CaptchaImage.AddLine(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Add variable level of curved lines to the image
            </summary>
            <param name="graphics1">The graphics1.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="T:Moses.Web.Handlers.CaptchaImageHandler">
            <summary>
            Captcha image stream HttpModule. Retrieves CAPTCHA objects from cache, renders them to memory, 
            and streams them to the browser.
            </summary>
            <remarks>
            You must add the to your web.config:
            <httpHandlers>
            	<add verb="GET" path="captcha.ashx" type="ManagedFusion.Web.Handlers.CaptchaImageHandler, ManagedFusion" />
            </httpHandlers>
            </remarks>
            <seealso href="http://www.codinghorror.com">Original By Jeff Atwood</seealso>
        </member>
        <member name="P:Moses.Web.Handlers.CaptchaImageHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="M:Moses.Web.Handlers.CaptchaImageHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="T:Moses.Web.CaptchaValidationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Moses.Web.CaptchaValidationAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:CaptchaCheckAttribute"/> class.
            </summary>
        </member>
        <member name="M:Moses.Web.CaptchaValidationAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:CaptchaCheckAttribute"/> class.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="P:Moses.Web.CaptchaValidationAttribute.Field">
            <summary>
            Gets or sets the field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="T:Moses.Web.Performance.ParseMaster">
            <summary>
            a multi-pattern parser
            </summary>
        </member>
        <member name="T:Moses.Web.Performance.ParseMaster.MatchGroupEvaluator">
            <summary>
            Delegate to call when a regular expression is found.
            Use match.Groups[offset + &lt;group number&gt;].Value to get
            the correct subexpression
            </summary>
        </member>
        <member name="P:Moses.Web.Performance.ParseMaster.IgnoreCase">
            <summary>
            Ignore Case?
            </summary>
        </member>
        <member name="P:Moses.Web.Performance.ParseMaster.EscapeChar">
            <summary>
            Escape Character to use
            </summary>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.Add(System.String)">
            <summary>
            Add an expression to be deleted
            </summary>
            <param name="expression">Regular Expression String</param>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.Add(System.String,System.String)">
            <summary>
            Add an expression to be replaced with the replacement string
            </summary>
            <param name="expression">Regular Expression String</param>
            <param name="replacement">Replacement String. Use $1, $2, etc. for groups</param>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.Add(System.String,Moses.Web.Performance.ParseMaster.MatchGroupEvaluator)">
            <summary>
            Add an expression to be replaced using a callback function
            </summary>
            <param name="expression">Regular expression string</param>
            <param name="replacement">Callback function</param>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.Exec(System.String)">
            <summary>
            Executes the parser
            </summary>
            <param name="input">input string</param>
            <returns>parsed string</returns>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.getPatterns">
            <summary>
            builds the patterns into a single regular expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.replacement(System.Text.RegularExpressions.Match)">
            <summary>
            Global replacement function. Called once for each match found
            </summary>
            <param name="match">Match found</param>
        </member>
        <member name="M:Moses.Web.Performance.ParseMaster.replacementString(System.Text.RegularExpressions.Match,System.Int32,System.String,System.Int32)">
            <summary>
            Replacement function for complicated lookups (e.g. Hello $3 $2)
            </summary>
        </member>
        <member name="T:Moses.Extensions.JQGrid`1">
            <summary>
            Extensão do JQGrid 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Moses.Extensions.ColumnBuilder">
            <summary>
            Contém implementações básicas do Moses
            </summary>
        </member>
        <member name="T:Moses.Membership.MembershipManager">
            <summary>
            Classe que existe apenas para marcar a interface IMembershipManager
            </summary>
        </member>
        <member name="P:Moses.Membership.IMembershipContext.ModuleName">
            <summary>
            Defines the module name for multi module system access
            </summary>
        </member>
        <member name="M:Moses.Membership.IMembershipContext.HasFeature(System.String,System.String)">
            <summary>
            Defines if a feature is available for the current Membership Context : Ex. ("Contrato", "Read")
            </summary>
            <param name="featureSet">Name of the Controller Witch the feature belongs</param>
            <param name="name">Name of the feature. (Ex. "Modify")</param>
            <returns></returns>
        </member>
        <member name="P:Moses.Security.FeatureSetAttribute.GroupLevel">
            <summary>
            Determina o Nível do Grupo de Acordo com as definições em RoleGroupOptions.
            </summary>
        </member>
        <member name="M:Moses.Security.FeatureAttribute.#ctor(Moses.Security.FeatureOptions)">
            <summary>
            Açucar Sintático
            </summary>
            <param name="description"></param>
        </member>
        <member name="P:Moses.Security.FeatureAttribute.Mode">
            <summary>
            Permite acesso de escrita ao criador do registro mesmo que a feature permita somente leitura em outras circunstâncias.
            </summary>
        </member>
        <member name="P:Moses.Security.FeatureAttribute.GroupLevel">
            <summary>
            Determina o Nível do Grupo de Acordo com as definições em RoleGroupOptions.
            </summary>
        </member>
        <member name="T:Moses.Security.FeatureOptions">
            <summary>
            Define Frequent Fast-Use Features for functionality configuration
            </summary>
        </member>
        <member name="T:Moses.Security.FeatureModeOptions">
            <summary>
            Restraint options from the available features based on pre-defined aspects
            </summary>
        </member>
        <member name="M:Moses.Serialization.JsonNetResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            este eh um x
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Moses.Serialization.ExcludeEntityKeyHelper.FilterEntities(System.Collections.Generic.IList{Newtonsoft.Json.Serialization.JsonProperty})">
            <summary>
            Exclui da lista todas as variáveis que representam entidades associadas
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
    </members>
</doc>
